1
00:00:12,380 --> 00:00:13,710
欢迎来到新一集的 8-Bit Guy

2
00:00:13,710 --> 00:00:17,060
当你在看那些关于早期电脑发展的纪录片

3
00:00:17,060 --> 00:00:20,100
特别是在上世纪70年代末到80年代初

4
00:00:20,100 --> 00:00:27,040
大多数纪录片都是把重心放在苹果、微软或 IBM 这样的巨人企业上

5
00:00:27,040 --> 00:00:32,460
而更为常见的企业像康懋达、雅达利和 Tandy

6
00:00:32,460 --> 00:00:35,480
并没有巨人企业那样的影响力

7
00:00:35,480 --> 00:00:38,320
大多数观众应该对这个 Commodore 64 十分熟悉

8
00:00:38,320 --> 00:00:41,400
它是当时销量最好的电脑之一

9
00:00:41,400 --> 00:00:47,440
它是因为优秀的图形和音频机能而知名的，
然而 Commodore 的历史不是从它开始的

10
00:00:47,680 --> 00:00:53,080
那我们就回到上世纪70年代末看看康懋达的起源吧

11
00:00:53,080 --> 00:01:00,980
在 1974 年，Chuck Peddle 率领一些工程师建立了一家
叫做 MOS Technology 的芯片厂

12
00:01:01,740 --> 00:01:05,780
大多数人曾经在摩托罗拉工作研发 6800 处理器

13
00:01:05,780 --> 00:01:10,180
他们决定生产一款叫做 6501 的兼容 CPU

14
00:01:10,180 --> 00:01:14,260
这样就可以轻易取代相对昂贵的摩托罗拉 CPU

15
00:01:14,620 --> 00:01:21,020
正如你所想的那样，摩托罗拉起诉了他们，紧接着 6502 就诞生了

16
00:01:21,020 --> 00:01:27,480
看起来几乎一样的芯片，但是改变很大，不再完全和 6800 兼容

17
00:01:28,020 --> 00:01:33,340
当然，当它不再兼容 6800 的时候，顾客就需要一些方法测试它

18
00:01:33,720 --> 00:01:39,280
1976年，Chuck Peddle 还设计了 KIM-1 开发计算机

19
00:01:39,280 --> 00:01:42,700
这是搭载了 6802 的单板计算机

20
00:01:42,700 --> 00:01:46,580
可以直接通过上面的按键机上编程

21
00:01:46,590 --> 00:01:51,770
在后期，它还可以连接一台纯终端机来运行 BASIC

22
00:01:51,770 --> 00:01:53,869
程序可以存入磁带机

23
00:01:53,869 --> 00:01:58,670
于是，这个电脑再业余爱好者以及工程师之间相当受欢迎

24
00:01:58,670 --> 00:02:03,789
6502 获得了相当的成功，甚至被用到了 Apple II 产品线

25
00:02:03,789 --> 00:02:11,730
雅达利 2600，NES，所有雅达利 8 位计算机

26
00:02:11,730 --> 00:02:16,190
BBC Micro，当然还有所有 Commodore 的 8 位计算机了

27
00:02:16,190 --> 00:02:23,280
不过在 1976 年，MOS 被康懋达商业机器收购 (Commodore Business Machines)

28
00:02:23,280 --> 00:02:26,780
当时 CBM 还是一家计算器厂

29
00:02:26,780 --> 00:02:29,600
Chuck Peddle 试图说服 Commodore 的老总 Jack Tramiel

30
00:02:29,600 --> 00:02:31,460
计算器业务将会成为死胡同

31
00:02:31,460 --> 00:02:34,960
他们需要一款产品来跟即将发布的 Apple II 竞争

32
00:02:35,520 --> 00:02:44,080
1977 年，Commodore PET 2001 诞生，使用到了很多和 KIM-1 一样的设计

33
00:02:44,080 --> 00:02:46,620
就像 Apple II 一样，PET 的部件一应俱全

34
00:02:46,620 --> 00:02:50,620
从内置显示器、键盘到内置磁带机

35
00:02:50,630 --> 00:02:55,080
1977 年是个人计算机进化的重要一年

36
00:02:55,080 --> 00:03:01,110
市场上的三巨头 Apple II、Commodore PET 和 TRS-80 计算机

37
00:03:01,110 --> 00:03:07,360
这是第一次普通人能以合适的价格买到电脑且不用自己组装

38
00:03:07,920 --> 00:03:14,020
更有趣的是，PET 实际上和 6502 处理器都是同一个人设计的

39
00:03:14,400 --> 00:03:19,320
如果你看这三巨头的价格，你可以看到 PET 的价格更具竞争力

40
00:03:19,320 --> 00:03:23,280
虽然 Apple II 有更好的硬件，这是后话

41
00:03:23,280 --> 00:03:29,480
而 PET 的优势是自带显示器和磁带机，
这些在 Apple II 上要单独购买

42
00:03:31,160 --> 00:03:34,460
让我们仔细观察一下 Commodore PET 的设计

43
00:03:34,470 --> 00:03:37,220
首先我要把你的注意力放到键盘上

44
00:03:37,220 --> 00:03:41,400
这个键盘很疯狂，当你真正尝试用它打字的时候就会感受到

45
00:03:41,400 --> 00:03:46,280
首先 在视频中没法展示的一点就是这个键盘很小

46
00:03:46,280 --> 00:03:51,990
主键盘区不包括数字键区也就是 15.2 毫米 X 6.9 毫米

47
00:03:51,990 --> 00:03:57,780
如果要进行对比的话，我的 iPhone 6 几乎可以盖住整个键盘

48
00:03:57,780 --> 00:04:00,360
然而把这个苹果迷你键盘放上去

49
00:04:00,360 --> 00:04:05,060
说是迷你键盘，实际上比起来算大的了

50
00:04:05,870 --> 00:04:07,520
但是尺寸并不是问题

51
00:04:07,520 --> 00:04:09,319
问题是布局很疯狂

52
00:04:09,319 --> 00:04:14,680
虽然按键布局是 QWERTY 布局，而正常情况下会进行一些错位排布

53
00:04:14,680 --> 00:04:17,290
形成像这样的斜线

54
00:04:17,290 --> 00:04:19,740
PET 就不是这样，排列得很整齐
(你是不知道 Nspire 的 ABCDEF 键盘有多恐怖

55
00:04:19,940 --> 00:04:22,020
这还没完

56
00:04:22,210 --> 00:04:24,380
看看这空格键有多短
(日式 106 键盘的空格键也挺短

57
00:04:24,380 --> 00:04:26,050
再看看键盘顶部这一行

58
00:04:26,050 --> 00:04:29,650
你也许认为这一行应该是一排数字，然而并不是

59
00:04:29,650 --> 00:04:31,150
反而是各种符号

60
00:04:31,150 --> 00:04:33,750
如果你想输入数字，就得用旁边的数字键盘

61
00:04:33,750 --> 00:04:36,560
更令人感到厌烦的是这些符号

62
00:04:36,560 --> 00:04:39,720
比如说，如果要输入 $ 或是数字符号

63
00:04:39,720 --> 00:04:43,460
我会本能的按住 SHIFT 键来按下这个键

64
00:04:43,460 --> 00:04:47,470
然而这样出来的完全不是我想要的字符

65
00:04:47,470 --> 00:04:50,960
然后是这个方向键

66
00:04:50,960 --> 00:04:53,070
就这两个

67
00:04:53,070 --> 00:04:56,370
一个键往下，另一个往右

68
00:04:56,370 --> 00:04:59,930
如果要把方向反过来就得按住 SHIFT 键

69
00:04:59,930 --> 00:05:04,880
通过这种方式你就可以改变光标的位置到任意地方

70
00:05:05,240 --> 00:05:09,660
再看看这个小箭头，你也许会认为这是退格键

71
00:05:09,660 --> 00:05:10,800
然而并不是

72
00:05:10,800 --> 00:05:13,340
实际上是把这个左箭头输出到屏幕上

73
00:05:13,340 --> 00:05:19,760
当你犯错的时候，而且相信我，你会继续按下这个键并继续犯错

74
00:05:19,770 --> 00:05:22,710
你会变得更加抓狂

75
00:05:22,710 --> 00:05:26,150
实际上删除键在数字键区的右上角

76
00:05:26,150 --> 00:05:34,460
实际上，这个电脑在 1977 年诞生的时候，很多人都从来没用过这样的计算机

77
00:05:34,460 --> 00:05:39,920
因此他们对键盘本身的布局不像我们今天那样有印象

78
00:05:40,320 --> 00:05:44,960
当时对他们来讲可能不怪异，对我们来讲就怪异了

79
00:05:44,960 --> 00:05:50,320
让我们看看 PET 的内部，就像卡车货舱一样打开

80
00:05:50,320 --> 00:05:53,180
里面还给了一个支架来支撑起它

81
00:05:53,770 --> 00:05:58,220
看到这 16 片 RAM 芯片，你也许认为 PET 有非常充足的 RAM

82
00:05:58,230 --> 00:05:59,760
然而并不是

83
00:05:59,760 --> 00:06:03,139
初代 PET 只有 4K RAM

84
00:06:03,139 --> 00:06:06,790
这些都是 1K 的 4 位静态 RAM 芯片

85
00:06:06,790 --> 00:06:09,920
考虑到这台电脑的成本

86
00:06:09,920 --> 00:06:14,440
你也许会想为什么他们没有使用更便宜的动态 RAM？

87
00:06:14,440 --> 00:06:19,740
静态 RAM 比动态 RAM 更为昂贵，至今也是这样

88
00:06:19,740 --> 00:06:25,389
然而 DRAM 有一个缺点，需要频繁刷新

89
00:06:25,389 --> 00:06:27,810
这需要附加的电路来进行处理

90
00:06:27,810 --> 00:06:30,300
然而只是处理 4K 的容量的话

91
00:06:30,300 --> 00:06:33,180
使用静态 RAM 就划算了

92
00:06:33,180 --> 00:06:38,860
4K RAM 容量确实很小，实际上你能用的更少

93
00:06:38,860 --> 00:06:44,860
系统至少需要使用 1K，剩下的 3K 给用户使用

94
00:06:44,860 --> 00:06:47,630
3K RAM 的量有多少

95
00:06:47,630 --> 00:06:52,360
PET 的屏幕是 25 行，每行 40 个字符

96
00:06:52,360 --> 00:06:58,780
你需要 1000 字节，或者说几乎 1KB 的量在全屏显示文字

97
00:06:58,790 --> 00:07:03,510
基本上你有足够的 RAM 显示 3 屏的文字

98
00:07:03,510 --> 00:07:10,510
然而 Apple II 和 TRS-80 出厂的时候也是 4K RAM

99
00:07:10,510 --> 00:07:14,630
这个 PET 已经被升级过了，你可以看到这块子板在这里

100
00:07:14,630 --> 00:07:17,160
上面有第三方的 32K RAM 扩展模块

101
00:07:17,160 --> 00:07:21,140
这也就是为什么 BASIC 启动界面屏幕显示有 31K 可用的原因

102
00:07:21,580 --> 00:07:24,290
让我们仔细观察一下磁带机

103
00:07:24,290 --> 00:07:29,280
实际上就是 Commodore 拿市面上能买到的磁带录音机稍微改了一下

104
00:07:29,820 --> 00:07:32,180
你可以看到整个部件就是这么挂在机器底部

105
00:07:32,180 --> 00:07:35,260
就我来看固定在这里显得很笨拙

106
00:07:35,260 --> 00:07:39,580
这个磁带机是 PET 首先能用的唯一的存储设备

107
00:07:39,580 --> 00:07:43,900
配合 4K RAM 用起来没什么问题

108
00:07:43,900 --> 00:07:48,419
到了 1979 年，Commodore 发布了配套的软驱

109
00:07:48,420 --> 00:07:52,560
而 PET 从没真的为利用软驱设计

110
00:07:52,560 --> 00:07:57,720
他们决定利用 IEEE-488 并行端口连接软驱

111
00:07:57,720 --> 00:08:02,620
PET 不像 Apple II 那样有扩展卡槽

112
00:08:02,620 --> 00:08:05,460
所以也不可能加装一个软驱控制卡

113
00:08:05,460 --> 00:08:10,820
他们所做的就是给软驱设计一整台电脑进去

114
00:08:10,820 --> 00:08:15,540
以此作为软驱的控制器和操作系统

115
00:08:15,900 --> 00:08:20,199
如果拆开软驱，你可以看到里面设计很复杂

116
00:08:20,200 --> 00:08:25,340
包括自己的 6502 处理器、RAM、ROM 和 I/O 控制器

117
00:08:26,480 --> 00:08:30,320
PET 并不会直接访问磁盘的数据

118
00:08:30,320 --> 00:08:34,720
它是给软驱发送信息，比如说需要获取一个文件

119
00:08:34,720 --> 00:08:38,600
软驱就会完成寻找数据的工作

120
00:08:39,100 --> 00:08:44,620
你可以就在同一台软驱上从一张软盘把文件复制到另一张软盘上

121
00:08:44,620 --> 00:08:46,220
就是一把(ming)梭(ling)

122
00:08:47,020 --> 00:08:51,890
PET 在学校流行，后面又在很多计算机实验室流行

123
00:08:51,890 --> 00:08:53,880
虽然软驱比较昂贵

124
00:08:53,880 --> 00:09:00,660
但是同一个软驱可以同时连接到多台 PET 上，这就节约了空间和金钱

125
00:09:00,670 --> 00:09:05,320
这就是当时一个计算机实验室布局的照片

126
00:09:05,320 --> 00:09:09,690
每张桌子摆放了 8 台 PET，连接到了一台软驱和一台打印机上

127
00:09:09,690 --> 00:09:11,710
然后我们来看看 PET 的屏幕

128
00:09:11,710 --> 00:09:13,770
初代 PET 的屏幕是黑白的

129
00:09:13,770 --> 00:09:17,980
很多人认为应该是绿色的，但那是后期型号的样子

130
00:09:17,980 --> 00:09:20,120
初代其实是黑白的

131
00:09:20,120 --> 00:09:21,880
甚至都没有灰度

132
00:09:21,880 --> 00:09:25,260
就是完全的单色，黑白

133
00:09:25,260 --> 00:09:30,000
屏幕是由摩托罗拉 6845 CRT 控制器的克隆版控制的

134
00:09:30,000 --> 00:09:33,960
同时也在 IBM CGA 卡和其它电脑使用

135
00:09:33,960 --> 00:09:36,660
这个控制器上没有处理颜色的线路

136
00:09:36,660 --> 00:09:38,490
也没有图形模式

137
00:09:38,490 --> 00:09:40,330
我是说 完全没有

138
00:09:40,330 --> 00:09:41,742
完全没办法给这台机器添加图形上去

139
00:09:41,742 --> 00:09:46,140
更糟糕的是，字符集在ROM中，不能变动

140
00:09:46,140 --> 00:09:48,700
所以没法改变字符的样子

141
00:09:48,700 --> 00:09:54,760
所以说你只能在屏幕上使用 ROM 固有的字符

142
00:09:54,760 --> 00:09:55,620
就这样

143
00:09:55,860 --> 00:10:01,820
然而有一种使用了 256 个特殊字符的字符集叫做 PETASCII

144
00:10:01,830 --> 00:10:03,420
或者就是叫做 PETSCII

145
00:10:03,420 --> 00:10:09,620
字符集包括了很多特殊的符号，可以用来形成基本图形

146
00:10:11,620 --> 00:10:17,100
也有一组 16 个色块的字符用来产生简单的像素贴图

147
00:10:17,560 --> 00:10:22,120
实际上我之前写了一个在 PET 上运行的程序叫做 PETDraw

148
00:10:22,130 --> 00:10:25,520
你可以选择你想要的字符并放置在屏幕上

149
00:10:25,520 --> 00:10:28,720
当然你并不需要特殊的程序来实现这一点

150
00:10:28,720 --> 00:10:34,140
因为有些字符就在键盘上，只需要用 SHIFT 键输入上去

151
00:10:34,140 --> 00:10:39,320
然而，我的程序操作起来更容易，特别是
当你在使用普通电脑键盘来运行模拟器的时候

152
00:10:39,660 --> 00:10:44,300
再加上它有一个特殊的像素点绘制模式来
了解这16个方块字符如何使用

153
00:10:44,310 --> 00:10:50,080
这样就可以在屏幕上画出 80x50 的像素画了

154
00:10:50,080 --> 00:10:53,260
这个程序在我的网站上免费提供

155
00:10:53,260 --> 00:10:56,140
PET 实际上确实有两个字符集

156
00:10:56,140 --> 00:11:00,960
我给你看了默认的情况，但是如果输入命令 "POKE 59468,14"

157
00:11:00,960 --> 00:11:07,060
他就会在大小写字符集之间切换，打字看起来更舒服，
但是图形字符更少

158
00:11:07,060 --> 00:11:09,840
PET也没有声音

159
00:11:09,850 --> 00:11:11,250
完全没有

160
00:11:11,250 --> 00:11:14,810
没有喇叭，也没有外接音频设备的地方

161
00:11:14,810 --> 00:11:19,149
然而早期的 PET 用户想到他们能利用用户接口的两条线

162
00:11:19,149 --> 00:11:22,060
这两条线连接到了其中一个 I/O 控制器上的握手寄存器上

163
00:11:22,060 --> 00:11:25,700
这实际上就可以操作一个单声部方波产生器

164
00:11:25,700 --> 00:11:29,220
不久之后，很多软件程序就开始使用这种方法

165
00:11:29,220 --> 00:11:32,140
作为这台计算机上默认的声音产生方式

166
00:11:32,140 --> 00:11:38,280
有趣的是，这种方法理论上讲可以用在所有具备用户接口的 Commodore 8 位计算机上

167
00:11:38,280 --> 00:11:39,360
这些电脑也都具备

168
00:11:39,360 --> 00:11:44,940
然而完全没必要，这些机器都内置音频合成器了

169
00:11:45,180 --> 00:11:47,960
最终 Commodore 重新设计了 PET

170
00:11:47,960 --> 00:11:51,600
比如说这个 4016 型号造型十分相似

171
00:11:51,600 --> 00:11:55,760
但是显示屏更大，而且用的是绿色荧光

172
00:11:55,760 --> 00:11:58,340
而不像初代那样使用黑白屏

173
00:11:58,340 --> 00:12:03,290
键盘也是重新设计过了的，输入起来就更方便

174
00:12:03,290 --> 00:12:06,060
然而前面我提到的大多数奇怪的布局依然保持了下来

175
00:12:07,420 --> 00:12:08,420
磁带驱动器没了

176
00:12:08,500 --> 00:12:11,820
你就得用像这样的外置磁带驱动器

177
00:12:11,820 --> 00:12:12,820
或者就用软驱

178
00:12:13,260 --> 00:12:17,840
机身打开的方法相似，但是支架的位置不同了

179
00:12:17,850 --> 00:12:21,490
外壳也是塑料的了，而不是初代 PET 的金属

180
00:12:21,490 --> 00:12:24,780
此外他们也内置了一枚喇叭

181
00:12:24,780 --> 00:12:27,720
这样就不再需要往用户接口连接任何东西上去了

182
00:12:28,440 --> 00:12:35,040
型号是 4016，意思是 40 列屏幕显示和 16K RAM

183
00:12:35,580 --> 00:12:40,720
虽然这个升级到了 32K，在后期的 PET 成为标准了

184
00:12:40,720 --> 00:12:44,140
不同的型号也是按照这种规律排列的

185
00:12:44,140 --> 00:12:48,920
最高端的型号 8096 具备 80 列屏幕显示和 96K RAM

186
00:12:49,520 --> 00:12:53,540
也有一些奇怪的变种，比如说这个 Super PET

187
00:12:53,540 --> 00:12:57,480
PET 最后发展成了 Commodore 的 CBM 系列商用机

188
00:12:57,480 --> 00:13:01,720
具备相似的设计语言，但是键盘可分离且布局更合理

189
00:13:02,100 --> 00:13:05,720
我本人从没见过 CBM 产品线的产品

190
00:13:05,720 --> 00:13:07,500
我认为它们中的大多数在欧洲销售

191
00:13:08,230 --> 00:13:13,060
然而 40 列 PET 似乎有最多的能给它们使用的软件

192
00:13:13,070 --> 00:13:17,370
一般来讲，给 40 列机型设计的软件不能在 80 列机型使用

193
00:13:17,370 --> 00:13:19,240
反之同理

194
00:13:19,240 --> 00:13:22,340
接下来我想给你看看 Commodore BASIC 的一个功能

195
00:13:22,340 --> 00:13:27,320
使用屏幕编辑器的时候，按下 RVS 键，屏幕上的字会变成反色

196
00:13:27,680 --> 00:13:31,200
我可以按 SHIFT + RVS 键关闭这个功能

197
00:13:31,200 --> 00:13:36,480
如果我就按 CLR HOME 键的话，光标会回到屏幕顶部

198
00:13:36,680 --> 00:13:40,370
如果按 SHIFT + CLR HOME 的话，就会清屏

199
00:13:40,370 --> 00:13:44,420
让我们看看如果在 BASIC 程序里使用这些命令会发生什么

200
00:13:44,420 --> 00:13:49,060
当我输入引号之后，然后按下 CLR 键，光标也只是离开了这个符号

201
00:13:49,320 --> 00:13:51,020
然后我就能键入一些文本

202
00:13:51,340 --> 00:13:52,430
也许我会使用 RVS 键

203
00:13:52,430 --> 00:13:55,899
这就会加上额外的符号

204
00:13:55,899 --> 00:13:57,860
我甚至还能用光标键

205
00:13:57,860 --> 00:14:02,600
当我执行这个程序的时候，它会记住我键入的这些命令的操作

206
00:14:02,600 --> 00:14:06,460
这样就使得你在 BASIC 程序排版变得十分容易

207
00:14:07,900 --> 00:14:12,740
说到 BASIC，PET 一开始就用的微软 BASIC

208
00:14:12,740 --> 00:14:16,740
虽然 Apple II 和 TRS-80 最终也使用了微软 BASIC

209
00:14:16,740 --> 00:14:20,060
但是在市场上的前几年它们使用的是专有的 BASIC

210
00:14:20,820 --> 00:14:27,240
而微软 BASIC 也只是在 1975 年被设计出来，就在这个机器发布两年前

211
00:14:27,240 --> 00:14:32,560
你可以认为这就是计算机市场的巨大标志

212
00:14:32,560 --> 00:14:35,360
电脑都具备了微软 BASIC

213
00:14:35,360 --> 00:14:41,860
如果在早期 PET 机型输入命令 WAIT 6502,1 就会有彩蛋

214
00:14:41,860 --> 00:14:45,620
如果改变了命令的第二个参数的数值

215
00:14:45,620 --> 00:14:48,600
它就会显示多次微软LOGO

216
00:14:48,600 --> 00:14:50,800
我看过微软 BASIC 的源代码

217
00:14:50,800 --> 00:14:55,680
很显然微软把自己的名字加密了这样就难以找到

218
00:14:56,280 --> 00:15:02,280
Commodore 对此感到十分愤怒，因为这台机器的空间有限

219
00:15:02,280 --> 00:15:08,120
这些复活节彩蛋程序就占用了宝贵的存储空间

220
00:15:08,320 --> 00:15:13,960
尽管机能有限，PET 上并不缺游戏

221
00:15:13,960 --> 00:15:16,960
大多数游戏都是为 40 列 PET 设计

222
00:15:16,960 --> 00:15:21,900
而且不同的 PET 之间因为键盘布局的不同也存在了一些不兼容问题

223
00:15:21,900 --> 00:15:25,840
这个版本的 Millipede 可玩性挺高

224
00:15:29,320 --> 00:15:31,480
就像这个版本的太空侵略者

225
00:15:37,580 --> 00:15:42,060
一些图形巧妙地使用了字符集的技巧

226
00:15:42,060 --> 00:15:45,600
你几乎就能误认为这些就是点阵图形

227
00:15:48,680 --> 00:15:54,750
我的朋友 Robin Harbron 把他的一款 RPG 游戏 Minimae 移植到了 PET 上，是个很有趣的项目

228
00:15:55,260 --> 00:15:58,800
还有个不错的俄罗斯方块

229
00:15:58,800 --> 00:16:04,040
使用到了数字音频，但是需要一个 DAC 来连接到用户接口

230
00:16:04,080 --> 00:16:07,640
就像 IBM 上的 Covox 那样

231
00:16:09,960 --> 00:16:13,720
Commodore PET 有时也拿来放 Demo

232
00:16:13,720 --> 00:16:18,560
这个 Demo 用到了 ORB，也就是发现了能显示图形的方法

233
00:16:19,360 --> 00:16:22,720
他们所做的就是用了一些关键的计时器

234
00:16:22,720 --> 00:16:28,340
在每个扫描行重置图形芯片，这样就只能显示每个字符的一行

235
00:16:28,340 --> 00:16:32,940
通过仔细使用字符的第一行像素，就可以选到想要的组合

236
00:16:32,940 --> 00:16:36,620
就可以做到几乎完美的像素画

237
00:16:36,620 --> 00:16:41,520
这个 Demo 还用到了 SID 芯片，如果你安装到你的 PET 上的话

238
00:16:41,520 --> 00:16:43,840
它听起来就像这样

239
00:16:43,840 --> 00:16:46,780
当然 Commodore 从没给 PET 加装过 SID 芯片

240
00:16:46,780 --> 00:16:49,480
如果需要的话你可以自己接一个

241
00:16:49,480 --> 00:16:52,380
然而没多少软件支持它

242
00:16:57,300 --> 00:17:01,540
我跟那些害怕在电脑上尝试东西缺乏经验的计算机用户交流的时候

243
00:17:01,540 --> 00:17:04,680
我常说的一句口头禅是

244
00:17:04,680 --> 00:17:06,540
看，你没什么能做的

245
00:17:06,540 --> 00:17:11,420
按下键盘或鼠标做不了什么事，可能会损坏电脑
(电脑死机了就别抓起鼠标往桌子上敲

246
00:17:11,700 --> 00:17:15,980
最糟的也就是会毁掉一些可被复原的数据

247
00:17:16,220 --> 00:17:23,000
然而在 Commodore PET 上这个建议并不完全有效

248
00:17:23,000 --> 00:17:29,180
因为在一些机型上输入命令 POKE 59458,62

249
00:17:29,180 --> 00:17:36,120
CRT 的画面会变得不同步，短时间内 CRT 和线路就 boom 了

250
00:17:36,560 --> 00:17:39,800
这就是所谓的杀手 POKE

251
00:17:39,800 --> 00:17:43,700
很显然我的口头禅并不总是真理

252
00:17:43,700 --> 00:17:47,440
我觉得我还是在这个电脑上试试杀手 POKE

253
00:17:47,440 --> 00:17:50,800
毕竟这不是我的，这是我从 Obsolete Geek 那里借来的

254
00:17:50,820 --> 00:17:52,240
当然，他不会介意的

255
00:17:57,320 --> 00:17:59,320
(OG 一脸懵逼中)

256
00:18:00,800 --> 00:18:05,180
Steve Gray 魔改了他的 PET 这样就能在外接显示器上显示颜色

257
00:18:05,260 --> 00:18:09,020
最后就把这个彩色 CRT 整合进了 PET

258
00:18:09,120 --> 00:18:13,140
这就需要对逻辑板和内核 ROM 做出大量的修改来改进

259
00:18:13,140 --> 00:18:15,480
但确实是个很不错的项目

260
00:18:16,040 --> 00:18:20,420
Commodore PET 也在无数的电影和电视剧里现身

261
00:18:20,429 --> 00:18:24,830
给你展示一些我喜欢的，这是《星际迷航2：可汗之怒》出现的

262
00:18:24,830 --> 00:18:27,850
这是克里船长的一个古董收藏

263
00:18:27,850 --> 00:18:31,800
你也能在 IT Crowd 的好几集看到它

264
00:18:31,800 --> 00:18:36,700
显然电影《万物理论》的霍金也在使用

265
00:18:37,140 --> 00:18:40,420
在《终结者3》结尾，当他们到达
在落尘避难所

266
00:18:40,420 --> 00:18:42,740
你可以在 John Connor 后面清楚的看到一台 PET

267
00:18:42,740 --> 00:18:47,780
而在电影《韦恩的世界》，当地电视台办公室也有一台 Commodore PET

268
00:18:47,780 --> 00:18:50,790
PET 是伟大的收藏品

269
00:18:50,790 --> 00:18:56,220
如果你房子里有地方放，那么拿来展示很合适

270
00:18:56,220 --> 00:18:59,410
当人们来你家做客的时候，你可以就拿它来装逼

271
00:18:59,410 --> 00:19:03,650
但说实话，真的拿来用的话并不是很好

272
00:19:03,650 --> 00:19:07,080
而且，我认识有很多老电脑爱好者

273
00:19:07,080 --> 00:19:10,900
但我从没听说过谁在 PET 面前一坐就是几个小时

274
00:19:10,900 --> 00:19:15,350
看起来挺酷，也有一定的历史地位

275
00:19:15,350 --> 00:19:18,929
但真的用起来没什么意思

276
00:19:18,929 --> 00:19:25,160
后面几集我就要介绍 Commodore VIC-20、C64、Plus/4、128 等

277
00:19:25,380 --> 00:19:29,780
你会看到它们的设计并不是革命性的

278
00:19:29,780 --> 00:19:33,320
而是从 PET 的基础上进化过来

279
00:19:33,330 --> 00:19:38,940
你可以看到很多源自这个机器的技术

280
00:19:38,940 --> 00:19:44,080
这些机器的特征就可以追溯到这个 PET

281
00:19:44,080 --> 00:19:47,240
甚至早到 KIM-1

282
00:19:47,240 --> 00:19:50,280
记得关注接下来的视频，谢谢观看！

