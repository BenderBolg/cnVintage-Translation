1
00:00:12,620 --> 00:00:14,269
欢迎来到新一集的 8-Bit Guy

2
00:00:14,269 --> 00:00:17,800
在上一集 Commodore 的历史中，我们回顾了 1977 年

3
00:00:17,800 --> 00:00:20,640
介绍了 KIM-1 和 Commodore PET

4
00:00:20,880 --> 00:00:24,060
这一集，我们介绍 Commodore VIC-20

5
00:00:24,060 --> 00:00:29,439
就像 PET 一样，VIC-20 也经常被 C64 的光芒所掩盖

6
00:00:29,440 --> 00:00:35,040
和苹果、IBM 相比经常完全不受计算机历史学家的重视

7
00:00:35,300 --> 00:00:36,760
那我们来看看吧

8
00:00:36,760 --> 00:00:40,440
VIC-20 是 1980 年发布的

9
00:00:40,440 --> 00:00:44,700
不过关于 VIC-20 的故事还要追溯到 1977 年

10
00:00:45,340 --> 00:00:48,660
在 Commodore 把 PET 推向市场的那一年

11
00:00:48,660 --> 00:00:53,120
MOS 科技推出了一种视频芯片叫做 6560

12
00:00:53,120 --> 00:00:57,800
它又叫视频界面芯片 (Video Interface Chip)，简称 VIC

13
00:00:57,800 --> 00:01:00,620
这个芯片是出售给那些有需求的公司的

14
00:01:00,620 --> 00:01:04,200
当他们需要生产有屏幕和需要显示文字的产品的时候

15
00:01:04,200 --> 00:01:07,580
这就涵盖了街机到医学用途显示器

16
00:01:07,580 --> 00:01:11,260
问题是他们找不到任何有需求的客户

17
00:01:11,260 --> 00:01:17,880
1980 年初，Commodore 的 CEO Jack Tramiel
一直在寻找一种廉价的彩色计算机

18
00:01:17,880 --> 00:01:21,520
要在 1980 年末之前在 CES 展示出来

19
00:01:21,520 --> 00:01:25,420
正好那个时候 Commodore 有几个正在进行的项目

20
00:01:25,420 --> 00:01:31,340
其中有一个工程师在闲暇的时候做了一个被他戏称为
Micro PET 的东西

21
00:01:31,860 --> 00:01:33,940
当 Jack Tramiel 看到这个 Micro PET 之后

22
00:01:33,940 --> 00:01:39,440
他就钦定了这玩意作为要在 CES 上展示的计算机

23
00:01:39,450 --> 00:01:44,340
基于现成的视频芯片设计，Commodore VIC-20 诞生了

24
00:01:44,340 --> 00:01:48,920
很显然这个名字是基于它的核心 VIC 芯片

25
00:01:49,040 --> 00:01:53,260
至于后面的数字 20 的来历仍然存在争议

26
00:01:53,260 --> 00:01:55,260
我们打开看看

27
00:01:56,140 --> 00:01:58,690
“欢迎来到友好的计算机世界！”

28
00:01:58,690 --> 00:02:01,710
第一眼看到的就是这个精美的用户手册

29
00:02:01,710 --> 00:02:03,920
这个回头再介绍

30
00:02:04,240 --> 00:02:05,740
现在把 VIC-20 取出来

31
00:02:10,420 --> 00:02:12,020
就是它了

32
00:02:16,340 --> 00:02:18,600
电源适配器藏在这个小盒子里了

33
00:02:18,610 --> 00:02:20,780
当然我的是美版

34
00:02:20,780 --> 00:02:24,450
我的用的是 DIN 接头，这个以后再说

35
00:02:24,450 --> 00:02:28,600
虽然 VIC-20 看起来和 PET 一点都不像

36
00:02:28,600 --> 00:02:32,140
它和 PET 依然有着很多相似的特征

37
00:02:32,140 --> 00:02:34,540
它用的也是一样的 6502 处理器

38
00:02:34,540 --> 00:02:38,160
用的也是一样的 BASIC，有着几乎一样的核心

39
00:02:38,160 --> 00:02:43,860
有一样的字符集，包括那些印在键盘下面的
要按住 SHIFT 键才能输入的符号

40
00:02:43,860 --> 00:02:48,600
有着一样的磁带端口，因此和 PET 的磁带驱动器兼容

41
00:02:48,600 --> 00:02:54,840
用户接口也和 PET 兼容，虽然在当时没几个外设用到它

42
00:02:54,980 --> 00:03:01,780
一样有着奇怪的方向键布局，但至少这两个方向键
在底部和 SHIFT 键靠一起了

43
00:03:01,780 --> 00:03:05,640
你就可以通过这三个键把光标向四个方向任意移动

44
00:03:06,200 --> 00:03:08,500
那么和 PET 的区别有哪些呢

45
00:03:08,780 --> 00:03:14,640
他们把软驱的 IEEE-488 并行端口换成了小的 DIN 串行接口

46
00:03:14,640 --> 00:03:20,099
这样就可以节省针脚，降低成本

47
00:03:20,100 --> 00:03:25,400
他们加了一个单独的摇杆接口，和当时流行的
雅达利 2600 摇杆兼容(注：Atari 仕样)

48
00:03:25,400 --> 00:03:27,660
虽然你只能用这个接口接一个摇杆来玩游戏

49
00:03:27,660 --> 00:03:32,900
这个接口还支持 Paddles 控制器，这样就可以双人游戏

50
00:03:32,900 --> 00:03:36,560
他们还加了功能键，没什么卵用

51
00:03:36,560 --> 00:03:38,940
除非程序员给他们分配了功能

52
00:03:38,940 --> 00:03:41,640
他们加了一个 Commodore 键

53
00:03:41,640 --> 00:03:46,060
有道理，想想苹果都在他们的机子上有苹果 LOGO 键

54
00:03:46,060 --> 00:03:47,760
Commodore 为什么不弄呢

55
00:03:47,880 --> 00:03:52,900
Commodore 键主要用于输入键盘上额外的特殊符号

56
00:03:53,100 --> 00:03:56,360
看任意一个键，底部印有两个字符

57
00:03:56,380 --> 00:03:58,600
按下 SHIFT 键来输入会得到右边的特殊符号

58
00:03:58,600 --> 00:04:01,120
按下 Commodore 键就会输入左边的特殊符号

59
00:04:01,580 --> 00:04:07,800
同时按下 SHIFT 和 Commodore 键，就会调用大小写字符集

60
00:04:07,800 --> 00:04:10,180
这个比在 PET 上实现起来更加容易

61
00:04:10,700 --> 00:04:12,360
然后是 RESTORE 键

62
00:04:12,560 --> 00:04:16,700
和 RUN/STOP 键一起按下，就是软重置

63
00:04:16,700 --> 00:04:21,060
比起重新开关机要轻松多了

64
00:04:21,060 --> 00:04:25,520
因为它不内置显示器，大多数人会把它接到电视上用

65
00:04:25,760 --> 00:04:32,880
然而，VIC-20 背后仅仅只通过这个 DIN 接口传输复合音视频信号

66
00:04:33,080 --> 00:04:35,920
这是与视频实际上是兼容
正在使用的端口由Atari由这点上

67
00:04:35,920 --> 00:04:38,860
实际上这也和雅达利 800 系列电脑的视频接口通用

68
00:04:39,020 --> 00:04:43,780
然而当时的大多数电视都没有复合视频接口

69
00:04:43,780 --> 00:04:47,900
因此还随机附赠了外置的 RF 调节器

70
00:04:47,900 --> 00:04:52,920
把它连到 VIC-20 上，然后把电视频道改成 3 或 4

71
00:04:52,920 --> 00:04:54,800
然后就能把电视当显示器用了

72
00:04:55,200 --> 00:05:00,060
一开机，你第一眼注意到的是 BASIC 版本 2

73
00:05:00,060 --> 00:05:02,360
只有大概 3.5KB 的剩余空间

74
00:05:02,360 --> 00:05:05,060
没错，是 3 个 半 千字节

75
00:05:05,060 --> 00:05:08,860
电脑有 5KB 的空间，其中一部分被系统占用了

76
00:05:08,860 --> 00:05:11,400
剩下的就是用户能够分配的了

77
00:05:12,000 --> 00:05:18,100
然而，3 年前这些电脑都是 4KB 起步的

78
00:05:18,100 --> 00:05:23,680
到了 1980 年 8K 甚至 16K 成为了入门的门槛

79
00:05:23,680 --> 00:05:27,400
高端一些的还有 32K 或是更多

80
00:05:27,640 --> 00:05:30,240
现在来谈谈 VIC 芯片

81
00:05:30,240 --> 00:05:34,760
能够显示 23 行 22 列的文字

82
00:05:34,760 --> 00:05:38,540
和别的电脑相比，这个数值小很多

83
00:05:38,540 --> 00:05:41,740
最后字符就很大

84
00:05:41,740 --> 00:05:45,440
然而，它不像 PET、TRS-80 甚至是 Apple II

85
00:05:45,440 --> 00:05:48,900
VIC-20 可以显示 8 种不同颜色的文字

86
00:05:48,900 --> 00:05:51,760
技术上讲 Apple II 确实可以产生颜色

87
00:05:51,760 --> 00:05:54,020
然而文本不能产生颜色

88
00:05:54,020 --> 00:05:57,840
我做过一个视频介绍 Apple II 的图形的工作方式

89
00:05:57,840 --> 00:06:00,280
VIC-20 确实有着瓶颈

90
00:06:00,280 --> 00:06:03,409
实际上对用户来讲操作起来很容易

91
00:06:03,409 --> 00:06:05,980
他们在数字键下方加上了颜色

92
00:06:05,980 --> 00:06:10,820
按下 CONTROL 键和数字键，你就可以在执行 BASIC 程序的同时改变颜色

93
00:06:13,780 --> 00:06:16,780
你还可以配合反向模式使用

94
00:06:17,060 --> 00:06:22,540
有趣的是，视频芯片能够显示 16 种颜色，但不是前景色

95
00:06:22,540 --> 00:06:26,780
其它 8 种颜色预留给了背景或辅助颜色

96
00:06:27,380 --> 00:06:30,900
所以，VIC-20 是 16 色机还是 8 色机？

97
00:06:31,380 --> 00:06:32,740
我也不知道，这不好说

98
00:06:32,740 --> 00:06:37,160
我猜技术上来讲，是有 16 种颜色，
但大多数场合下使用也就只有 8 种颜色

99
00:06:37,440 --> 00:06:39,380
那图形模式下呢

100
00:06:39,380 --> 00:06:42,360
技术上来讲，没有任何颜色，或者说干脆没有

101
00:06:42,840 --> 00:06:47,060
然而可以重新定义字符集，在 PET 上做不到

102
00:06:47,700 --> 00:06:51,620
如果你当时在编写游戏的话，你会拿出一张网格纸

103
00:06:51,740 --> 00:06:53,080
设计出不同的形状

104
00:06:53,840 --> 00:06:58,700
字符都是 8 像素宽，每一行代表 1 字节的数据

105
00:06:58,700 --> 00:07:03,240
如果要把字符 O 替换成笑脸，我可以这么做

106
00:07:03,240 --> 00:07:05,920
当我输入 O 的时候就会产生笑脸

107
00:07:06,720 --> 00:07:09,780
这对开发游戏非常方便

108
00:07:09,780 --> 00:07:12,200
比如说，当你在玩青蛙过河的时候

109
00:07:12,200 --> 00:07:15,980
停下来仔细观察，你所看到的并不是图形画面

110
00:07:15,980 --> 00:07:19,680
这就是一堆字符在屏幕上移动

111
00:07:20,320 --> 00:07:23,680
只是把字符的样子修改了

112
00:07:23,920 --> 00:07:28,900
乌龟就特别明显，你可以看到有黑边

113
00:07:29,600 --> 00:07:34,660
毕竟不管背景颜色怎样，每一个字符只能使用 1 种颜色

114
00:07:35,320 --> 00:07:41,140
同理在 Q*Bert 上看起来也很蛋疼，它也因此成为了
最糟糕的移植版

115
00:07:41,840 --> 00:07:46,820
第一眼看，VIC-20 的图形机能严重受限

116
00:07:46,820 --> 00:07:49,480
游戏效果就受到了机器的限制

117
00:07:49,480 --> 00:07:52,680
有一些方法可以规避一部分限制

118
00:07:52,680 --> 00:07:59,140
比如说，虽然电脑没有真正的点阵图形模式，
你可以全屏填满字符

119
00:08:00,100 --> 00:08:05,200
乍一看，把 256 个字符都放置在屏幕上

120
00:08:05,200 --> 00:08:07,780
只能占据大概半个屏幕的空间

121
00:08:07,780 --> 00:08:13,880
不过 VIC 芯片也支持两倍高度字符模式，每个字符 16 像素高

122
00:08:14,180 --> 00:08:18,240
使用这个模式，全屏填满字符是可能的

123
00:08:18,249 --> 00:08:22,879
这个时候只需要简单修改每一个字符的每一个像素点

124
00:08:22,879 --> 00:08:25,259
就成了全屏点阵图形模式

125
00:08:25,259 --> 00:08:26,999
只有一个缺点

126
00:08:26,999 --> 00:08:29,910
VIC-20 的 RAM 不够用

127
00:08:29,910 --> 00:08:34,780
然而通过 RAM 扩展卡带，尤其是这个 VIC-20 超级扩展卡

128
00:08:34,780 --> 00:08:37,590
就能充分在这个模式下发挥机能

129
00:08:37,940 --> 00:08:42,800
这是一个常规的使用了前景色和背景色的 8x8 像素的字符

130
00:08:43,560 --> 00:08:46,840
全屏的背景色都是统一的

131
00:08:46,840 --> 00:08:50,700
前景色可以设置成任意 8 种常规的颜色

132
00:08:50,860 --> 00:08:53,570
还有一种多重颜色的字符模式

133
00:08:53,570 --> 00:08:58,160
这个时候，你的 8x8 像素字符的分辨率减半了

134
00:08:58,160 --> 00:09:00,209
现在是 4x8 像素了

135
00:09:00,209 --> 00:09:05,060
不过你能给每个字符添加四种颜色了

136
00:09:05,060 --> 00:09:09,100
前景色、背景色、两种辅助颜色

137
00:09:09,100 --> 00:09:11,820
可以是前面提到的任意 16 种颜色

138
00:09:12,500 --> 00:09:15,100
这样画面看起来就会更加丰富多彩

139
00:09:15,860 --> 00:09:19,920
如果你想让一个图形字符从屏幕的一侧平滑移动到另一侧

140
00:09:19,920 --> 00:09:22,920
而不只是简单的跳过去

141
00:09:22,920 --> 00:09:26,360
这就需要一些特别的编程技巧了

142
00:09:26,360 --> 00:09:28,500
比如说我们要画这个球

143
00:09:29,400 --> 00:09:32,820
因为它的尺寸，你要重新定义 4 个字符

144
00:09:32,840 --> 00:09:37,920
然而，如果想让球平滑移动，你就需要多于 4 个的字符

145
00:09:37,920 --> 00:09:42,560
这就需要不停地重新定义这些字符

146
00:09:42,600 --> 00:09:46,000
当然，最终用户不会看到这些框

147
00:09:46,000 --> 00:09:47,631
只会看到在动的球

148
00:09:47,640 --> 00:09:52,400
这些方框只是向你展示后台的软件是如何实现的

149
00:09:52,560 --> 00:09:56,140
虽说这对程序员很痛苦

150
00:09:56,140 --> 00:10:01,280
但实际上，在 1980 年，市面上没什么电脑比这个机能还要好

151
00:10:01,280 --> 00:10:05,240
当像 Q*Bert 这样的游戏因为设计这么糟糕

152
00:10:05,240 --> 00:10:09,120
你完全可以谴责在其背后的程序员

153
00:10:09,120 --> 00:10:14,640
这是近年开发的一个 Q*Bert 重制版，看起来就舒服一些

154
00:10:14,640 --> 00:10:18,620
虽然仍在开发，但我想通过这个案例说明只要继续付出努力

155
00:10:18,620 --> 00:10:22,480
VIC-20 可以实现比预期更好的图形效果

156
00:10:23,000 --> 00:10:28,280
如果你去看现在的 DEMO 你就可以了解 VIC-20 的图形芯片机能

157
00:10:28,320 --> 00:10:33,880
除了可能需要 RAM 扩展卡带之外完全使用的原本的 VIC-20 硬件

158
00:10:33,900 --> 00:10:36,320
当然我得承认，这些像素点很大，很有颗粒感

159
00:10:36,320 --> 00:10:40,700
但是我敢说这个图形机能能够吊打当时其它几乎所有计算机

160
00:10:41,100 --> 00:10:43,120
然后我们来讨论声音产生器

161
00:10:43,120 --> 00:10:49,200
不管你信不信，VIC 芯片不但能产生视频信号，还能产生音频信号

162
00:10:49,200 --> 00:10:51,620
VIC-20 有四个声部

163
00:10:51,630 --> 00:10:56,560
其中三个声部能产生方波，最后一个产生白噪音

164
00:10:56,560 --> 00:11:02,820
然而方波的限制比较有趣，如果你看方波的频率范围

165
00:11:02,820 --> 00:11:05,660
能够产生 5 个八度，还不错

166
00:11:05,660 --> 00:11:09,740
然而每个声部只能产生其中的 3 个八度

167
00:11:09,740 --> 00:11:14,520
不过他们都受到了限制，就是分别产生低音、中音和高音

168
00:11:14,529 --> 00:11:17,209
在中间的部分都有重叠

169
00:11:17,209 --> 00:11:19,700
如果看 VIC-20 的说明书，Commodore 解释说

170
00:11:19,700 --> 00:11:25,100
这就像低音、中音、高音、狮子吼(噪音)的搭配

171
00:11:25,100 --> 00:11:30,680
大多数合成器都能用 ADSR 包络，声音就有更自然的起音和回落

172
00:11:30,960 --> 00:11:33,620
然而 VIC-20 没这回事

173
00:11:33,620 --> 00:11:36,440
要不发出来要不就没有

174
00:11:36,440 --> 00:11:40,320
除了用音量控制，就没法缓缓降低声音

175
00:11:40,320 --> 00:11:42,500
四个声部都是如此

176
00:11:42,500 --> 00:11:47,680
同样的，第一眼看你也许还是会认为这是很糟糕的音频合成器

177
00:11:47,680 --> 00:11:52,420
然而你要知道在 1980 年这可没什么竞争对手

178
00:11:52,640 --> 00:11:56,960
当时大多数电脑就只有单声部蜂鸣喇叭

179
00:11:56,960 --> 00:12:00,920
除了雅达利电脑产品线有 4 声部合成器芯片

180
00:12:00,920 --> 00:12:02,440
虽然相对比较高级

181
00:12:03,000 --> 00:12:07,460
另外要考虑的是，声音芯片主要是为游戏打造的

182
00:12:07,460 --> 00:12:13,260
在 1980 年大多数游戏甚至都没有乐谱，
除了吃豆人和青蛙过河开头的音乐

183
00:12:13,820 --> 00:12:17,480
因此市面上对复杂的合成器需求并不强烈

184
00:12:18,200 --> 00:12:21,320
Commodore 对 VIC-20 有着独到的营销策略

185
00:12:21,320 --> 00:12:25,060
他们请来了 William Shatner 为计算机代言

186
00:12:25,060 --> 00:12:27,660
先生们，来看看我的朋友 VIC

187
00:12:27,660 --> 00:12:29,840
Commodore VIC-20

188
00:12:29,840 --> 00:12:30,800
来看看？

189
00:12:30,800 --> 00:12:32,740
VIC-20 能做的比你的机器更多

190
00:12:32,740 --> 00:12:35,860
这是能够玩伟大的游戏的伟大的计算机

191
00:12:35,860 --> 00:12:39,940
他们宣传说 VIC-20 是不错的游戏主机

192
00:12:39,940 --> 00:12:41,700
不过也有更多

193
00:12:41,710 --> 00:12:46,180
Commodore VIC-20 和那些游戏机不一样，有真正的计算机键盘

194
00:12:46,180 --> 00:12:51,240
有了 Commodore VIC-20，全家人都能在家学电脑

195
00:12:51,240 --> 00:12:54,240
这也是作为孩子的学习机

196
00:12:54,240 --> 00:12:57,620
当时的售价很合理，299 刀

197
00:12:58,220 --> 00:13:01,900
不像 Commodore PET、TRS-80 或是苹果的计算机

198
00:13:01,900 --> 00:13:07,100
Commodore 把 VIC-20 放在百货商店的
靠近雅达利和 Intellivision 主机的位置出售

199
00:13:07,100 --> 00:13:10,980
果然，VIC-20 获得了消费者的欢迎

200
00:13:10,980 --> 00:13:14,620
这是第一台销量超百万的个人计算机

201
00:13:14,620 --> 00:13:18,980
打败了 3 年前就在发售的 Apple II

202
00:13:18,980 --> 00:13:24,220
直到 1985 年停售，它卖出了超过 250 万台

203
00:13:24,220 --> 00:13:26,699
VIC-20 是我的第一台电脑

204
00:13:26,700 --> 00:13:30,040
我在 1981 年也就是我 6 岁的时候得到的

205
00:13:30,040 --> 00:13:32,660
虽然 6 岁是发生的事情我记得不是很多

206
00:13:32,660 --> 00:13:35,560
但是把这个电脑带回家的经历至今记忆犹新

207
00:13:35,900 --> 00:13:40,260
当时好几个月我们都没有存储设备，也没有卡带游戏

208
00:13:40,300 --> 00:13:45,380
我唯一能做的就是照着说明书把示例程序输入进键盘

209
00:13:45,380 --> 00:13:48,860
比如说这个，在屏幕上产生一只扇动翅膀的鸟

210
00:13:48,860 --> 00:13:51,760
或者通过这个程序把键盘变成钢琴

211
00:13:51,760 --> 00:13:59,460
我得说 VIC-20 的用户手册是我有史以来
见过最好的计算机说明书

212
00:13:59,600 --> 00:14:02,080
每一个示例程序都有着这些气泡式的注释

213
00:14:02,080 --> 00:14:08,520
来告诉你这些是什么意思，即便对于
一个 6 岁小孩来讲都容易读懂

214
00:14:08,920 --> 00:14:12,740
这个说明书在我小时候的时候让我学会了编程

215
00:14:12,740 --> 00:14:17,760
说实话，要不是这个说明书，我完全想不到这个电脑能做什么

216
00:14:17,760 --> 00:14:21,640
作为一个成年人，在职业生涯的很多方面
我应该感谢这本说明书

217
00:14:21,640 --> 00:14:23,440
因为这就是一切的开始

218
00:14:24,560 --> 00:14:28,380
对大多数人来讲，VIC-20 是游戏机

219
00:14:28,380 --> 00:14:32,540
游戏一般是通过磁带或卡带发售的

220
00:14:32,920 --> 00:14:37,200
Commodore 提供了特制的磁带机，被叫做 Datasette

221
00:14:37,680 --> 00:14:45,520
和其它电脑用普通的磁带播放器，还要调音量和音调不同

222
00:14:45,520 --> 00:14:49,420
Commodore 的磁带机走的都是数字信号，可以保证可靠的信号

223
00:14:49,420 --> 00:14:51,680
但是慢到难以忍受

224
00:14:51,680 --> 00:14:54,660
不过因为 VIC-20 的内存本来就小

225
00:14:54,660 --> 00:15:01,260
也就只有 3.5KB 左右能用，程序都很小，加载起来也很快

226
00:15:01,260 --> 00:15:03,640
所以真没什么问题

227
00:15:03,640 --> 00:15:07,100
然而大多数游戏都是通过卡带发售的

228
00:15:07,100 --> 00:15:09,060
考虑到一些原因也是有道理的

229
00:15:09,060 --> 00:15:15,560
首先，人们已经对雅达利 2600 或 Intellivision 上的卡带游戏习惯了

230
00:15:15,660 --> 00:15:18,880
你只要插上卡带、开机

231
00:15:18,880 --> 00:15:22,240
就像游戏机一样，直接就能玩了

232
00:15:22,240 --> 00:15:26,019
也不需要去学习用什么命令

233
00:15:26,019 --> 00:15:30,540
然而很容易被人忽视的就是内存限制

234
00:15:30,540 --> 00:15:34,700
6502 处理器能够同时访问最大 64K 的内存

235
00:15:34,700 --> 00:15:37,500
同时包括 RAM 和 ROM

236
00:15:37,500 --> 00:15:43,900
首先 VIC-20 已经有了 5K 的内存，
8K 的内核，剩下的 8K 是 BASIC

237
00:15:43,900 --> 00:15:47,820
CPU 已经访问了 21K 的内存

238
00:15:47,820 --> 00:15:50,380
然而内存映射仍然有很大的空缺

239
00:15:50,380 --> 00:15:54,840
只需要插上卡带 ROM，就可以填补 16K 的游戏代码

240
00:15:54,840 --> 00:15:57,120
但如果要从磁带或软盘加载游戏

241
00:15:57,120 --> 00:16:00,560
你就要确保游戏能够放进 3.5K 的 RAM

242
00:16:01,040 --> 00:16:03,820
虽然 VIC-20 有 RAM 扩展卡带

243
00:16:03,820 --> 00:16:09,860
大多数游戏开发者更想面向常规的主机开发，
因为这也是大多数用户群体所在

244
00:16:09,860 --> 00:16:13,800
因此卡带游戏比磁带游戏看起来更加复杂

245
00:16:13,800 --> 00:16:16,960
我们来看看上面流行的一些游戏

246
00:16:17,920 --> 00:16:22,040
你要记住这上面的游戏不仅仅反映着 VIC-20 的硬件

247
00:16:22,040 --> 00:16:26,860
也反映了 1980 年到 1984 年的游戏类型

248
00:16:27,500 --> 00:16:29,660
The Tower of Evil

249
00:16:29,660 --> 00:16:34,960
这和其它的一些游戏，像是雅达利 2600
上的 Haunted House十分相似

250
00:16:38,480 --> 00:16:43,640
这是 Skyhawk，虽然在 C64 和其它的平台上叫做 Falcon Patrol

251
00:16:49,300 --> 00:16:53,060
这是 River Rescue，让我想起了雅达利上的 River Raid

252
00:16:58,460 --> 00:16:59,780
这是 Pipes

253
00:16:59,780 --> 00:17:04,140
毋庸置疑，你要在水源和旁边的房子之间装配水管

254
00:17:06,420 --> 00:17:07,480
Mower Mania

255
00:17:07,680 --> 00:17:12,300
如果自己在家修剪草坪觉得没意思，你可以在游戏中修剪

256
00:17:15,980 --> 00:17:18,200
这是 Miner 2049er

257
00:17:18,200 --> 00:17:22,640
画面看起来很简陋，但是这是这个游戏中可玩性很高的版本

258
00:17:27,040 --> 00:17:30,720
这叫 Martix，是 VIC 上 Jeff Minter 开发的众多游戏之一

259
00:17:30,720 --> 00:17:34,560
看起来他的游戏有着很多的增色

260
00:17:44,320 --> 00:17:48,160
这是 Congo Bongo 也许不是你见到的最好的版本

261
00:17:52,480 --> 00:17:54,480
以及 Choplifter

262
00:17:54,480 --> 00:17:58,480
这个游戏早期在 C64 上很流行

263
00:17:58,480 --> 00:18:01,440
VIC-20 版本也不错

264
00:18:03,440 --> 00:18:05,360
啊♂Omega Race

265
00:18:05,360 --> 00:18:08,400
这是我所拥有的第一款 VIC-20 游戏

266
00:18:08,400 --> 00:18:11,840
显然直到今天都能排到前十

267
00:18:11,840 --> 00:18:15,200
虽然完全单色，但是动画很不错

268
00:18:17,600 --> 00:18:23,360
Buck Rogers 也是一款具有快速运动画面的游戏，
带来十分沉浸的体验

269
00:18:27,760 --> 00:18:31,280
这是另一款 Jeff Minter 的游戏 Laser Zone

270
00:18:38,320 --> 00:18:41,920
这是任天堂官方推出的大金刚

271
00:18:41,920 --> 00:18:44,800
这也是这个平台上最好的游戏之一

272
00:18:52,160 --> 00:18:56,320
我也要把吃豆人算进 VIC 的前十名游戏之中

273
00:19:00,480 --> 00:19:05,040
VIC 还有很多流行的游戏的克隆版，比如 Cosmic Cruncher

274
00:19:05,040 --> 00:19:08,400
显然是吃豆人的山寨版

275
00:19:13,280 --> 00:19:18,080
Jelly Monsters 也是差不多的山寨版，不过这个做的就挺好

276
00:19:23,280 --> 00:19:26,720
虽然官方没有发布 VIC-20 的太空侵略者

277
00:19:26,720 --> 00:19:31,920
这个叫 Avenger 的山寨版不输给其它 8 位平台的官方版

278
00:19:33,680 --> 00:19:36,800
Moons of Jupiter 也是不错的 Asteroids 山寨版

279
00:19:36,800 --> 00:19:40,800
我们来看看近年为 VIC-20 开发的游戏

280
00:19:40,800 --> 00:19:43,040
比如说这个 Astronell

281
00:19:46,080 --> 00:19:50,960
虽然你不能在上面玩显卡危机，你还可以玩 Doom

282
00:19:50,960 --> 00:19:55,520
正如你所猜到的，这需要完整的 32K 内存扩展卡

283
00:19:56,880 --> 00:19:59,760
这个平台上，游戏的菜单令人印象深刻

284
00:19:59,760 --> 00:20:02,160
我们把音乐的音量调到最大

285
00:20:06,000 --> 00:20:09,920
你就可以同时听到所有的方波同时发出

286
00:20:11,360 --> 00:20:12,960
开始玩吧

287
00:20:17,040 --> 00:20:20,720
233 你可不会想到画面有这么小

288
00:20:20,720 --> 00:20:25,120
考虑到是 1MHz 的 6502，你也别指望太多

289
00:20:25,120 --> 00:20:28,480
我怀疑这还根本不够玩

290
00:20:28,960 --> 00:20:33,040
令人惊讶的是，你仍然能够分辨你的行进方向，虽然不是很清楚

291
00:20:33,040 --> 00:20:36,160
这让我想到了 Wolfenstein 3D 相比 Doom 所做的

292
00:20:36,160 --> 00:20:38,690
天花板和地板都是平的

293
00:20:38,690 --> 00:20:40,560
对 VIC-20 来讲已经很不容易了

294
00:20:41,680 --> 00:20:46,260
接下来要给你展示的游戏叫 Pentagorat，
是近年为 VIC-20 开发的游戏

295
00:20:46,260 --> 00:20:47,900
十分精美

296
00:20:47,900 --> 00:20:52,260
实际上确实是单色的游戏，但是他们用了独特的方式上色

297
00:20:52,260 --> 00:20:53,220
使其丰富多彩

298
00:20:53,660 --> 00:20:56,600
既然你已经知道 VIC-20 的图形工作原理

299
00:20:56,600 --> 00:21:00,900
相信游戏的角色能做出流畅的动画也不会让你感到惊奇

300
00:21:04,500 --> 00:21:08,860
虽然磁带驱动器被大多数用户用来存储程序

301
00:21:08,860 --> 00:21:14,480
Commodore 还是推出了对应的软驱，叫做 VIC-1541

302
00:21:14,480 --> 00:21:18,820
软驱的基本设计仍然跟 PET 一样

303
00:21:19,100 --> 00:21:23,880
软驱也包括了自己的 6502 处理器、RAM、ROM

304
00:21:23,880 --> 00:21:29,260
这基本上就是一台和 VIC-20 性能一样的电脑了，就是没屏幕

305
00:21:29,260 --> 00:21:31,880
这个软驱虽说是为 VIC-20 设计的

306
00:21:31,880 --> 00:21:35,200
使用到了几乎和 PET 的软驱一样的传输协议

307
00:21:35,200 --> 00:21:39,480
唯一的区别是，这是串行传输，PET 是并行传输

308
00:21:39,480 --> 00:21:44,960
实际上，如果通过转接盒，你也可以在 VIC-20 上用 PET 软驱

309
00:21:45,500 --> 00:21:49,080
他们准备在上面用硬件移位寄存器

310
00:21:49,080 --> 00:21:51,720
处理软驱和电脑之间的串行传输

311
00:21:51,720 --> 00:21:55,570
但是他们发现移位寄存器有缺陷，不能正常工作

312
00:21:55,570 --> 00:22:00,720
但是也快临近发布了，于是他们决定抛弃移位寄存器

313
00:22:00,720 --> 00:22:05,380
完全通过 CPU 软件处理字节

314
00:22:05,380 --> 00:22:07,510
于是性能就降低了

315
00:22:07,510 --> 00:22:12,760
不过考虑到 VIC-20 的内存

316
00:22:12,760 --> 00:22:15,860
加载所需速度还能接受

317
00:22:16,140 --> 00:22:20,320
这就成了影响 Commodore 多年的紧箍咒

318
00:22:20,320 --> 00:22:24,620
到了 Commodore 64 那一集的时候你就明白了

319
00:22:25,660 --> 00:22:29,040
我们知道了串行设备的工作方式

320
00:22:29,040 --> 00:22:33,160
你注意到了 VIC-1541 的背面有两个串行接口

321
00:22:33,160 --> 00:22:34,340
都没有标签的

322
00:22:34,340 --> 00:22:36,039
你可以使用任意一个

323
00:22:36,039 --> 00:22:39,360
另一个可以用来连接另一个软驱

324
00:22:39,360 --> 00:22:43,340
你最多可以连接 4 个软驱，如果连接用完了

325
00:22:43,340 --> 00:22:44,640
你还能接一个打印机

326
00:22:46,040 --> 00:22:51,720
VIC-1525 点阵打印机是当时最为常见的和 VIC-20 搭配的型号

327
00:22:51,720 --> 00:22:55,460
每一个在串行链上的设备都有自己的设备编号

328
00:22:55,460 --> 00:23:01,140
每一个软驱出厂时的编号默认都是 8

329
00:23:01,440 --> 00:23:05,040
如果你告诉 VIC-20 要加载一个叫 HELLO 的程序

330
00:23:05,040 --> 00:23:08,120
它就会假设你要从磁带加载

331
00:23:08,120 --> 00:23:12,740
如果你要从软盘加载，就要在命令后面加一个逗号 8

332
00:23:12,740 --> 00:23:14,120
来告诉电脑从软盘加载

333
00:23:15,120 --> 00:23:19,160
如果你买了两个软驱同时接上，他们不会工作

334
00:23:19,160 --> 00:23:21,860
因为它们都会被设定为 8 号设备

335
00:23:21,860 --> 00:23:23,860
有两种解决方案

336
00:23:23,860 --> 00:23:25,340
一是通过软件

337
00:23:25,340 --> 00:23:28,020
当你开启第一个软驱的时候

338
00:23:28,020 --> 00:23:33,900
你要输入一串又臭又长的命令把软驱的设备编号改成⑨号

339
00:23:33,900 --> 00:23:37,620
然后就可以把第二个软驱打开作为 8 号使用

340
00:23:37,620 --> 00:23:42,540
这样就可以同时从两个软驱按照自己的意愿加载程序了

341
00:23:42,620 --> 00:23:43,620
不过，如果你发现这个刺激性的话，
更永久的解决将涉及拆卸

342
00:23:43,620 --> 00:23:48,000
如果嫌麻烦，那么一劳永逸的方法就要拆开软驱了

343
00:23:48,220 --> 00:23:51,360
在逻辑板上有两个分开的触点

344
00:23:51,520 --> 00:23:57,660
你只要切开其中一个，就可以把设备编号改成⑨、10 或 11

345
00:23:57,820 --> 00:24:01,800
这就很烦人了，不过没多少用 VIC-20 的人有软驱

346
00:24:01,800 --> 00:24:03,100
更不用谈还要两个或是三个的了

347
00:24:03,420 --> 00:24:07,160
多年之后的 Commodore 软驱就在后面设置了 DIP 开关

348
00:24:07,160 --> 00:24:08,660
就可以设置设备编号

349
00:24:08,900 --> 00:24:12,340
这个时候拥有多个软驱就比较常见了

350
00:24:12,340 --> 00:24:18,120
我还得指出，既然软驱格式和系统完全照搬 PET

351
00:24:18,120 --> 00:24:21,160
就连列举文件的方法都是一样的

352
00:24:21,160 --> 00:24:26,300
VIC-20 除了加载、保存和验证之外没有任何内建的软驱命令

353
00:24:26,500 --> 00:24:31,320
如果需要看磁盘上的文件，你就需要 LOAD"$"

354
00:24:31,320 --> 00:24:36,000
软驱就会产生一个小 BASIC 程序返回到电脑

355
00:24:36,000 --> 00:24:39,920
你就可以列举小 BASIC 程序来看软盘的目录结构了

356
00:24:39,920 --> 00:24:44,300
问题是，目录列举是为 40 列或 80 列的 PET 设计的

357
00:24:44,300 --> 00:24:48,520
你就会注意到在 VIC-20 的画面上列举不正常，导致自动换行

358
00:24:48,520 --> 00:24:52,220
不过作为孩子我并没注意到这个问题

359
00:24:52,220 --> 00:24:54,679
因为我不知道它在其它机器上是如何运作的

360
00:24:54,680 --> 00:24:59,740
不过加装 VIC-modem 可是在当时最高端的 VIC-20 搭配了

361
00:25:00,080 --> 00:25:04,220
作为当今 VIC-20 的收藏家，我需要指出一些细微的区别

362
00:25:04,580 --> 00:25:09,800
早期 VIC-20 键盘上的按键字体很像 PET

363
00:25:10,120 --> 00:25:13,480
我们一般把它叫做 PET 样式键盘

364
00:25:13,800 --> 00:25:18,240
这个顶部 VIC-20 的标牌样式也有几种样式

365
00:25:18,560 --> 00:25:21,220
注意到这个是 VC-20

366
00:25:21,220 --> 00:25:25,180
这是德国的情况，因为 VIC 一词如果大声读出来的话

367
00:25:25,180 --> 00:25:29,300
听起来就很像德语的脏话了，所以就改名字了

368
00:25:29,620 --> 00:25:33,260
早期的机型用的 8 字电源接口

369
00:25:33,260 --> 00:25:36,260
后续机型用的是圆形 DIN 接口

370
00:25:36,260 --> 00:25:43,940
这也就是我的 VIC-20 所使用的，好处就是电源和 C64 通用

371
00:25:43,940 --> 00:25:47,920
找起来就比较容易，也能配合这样的外设使用

372
00:25:47,920 --> 00:25:52,760
就可以保护你的电脑不受变压器老化而烧坏

373
00:25:53,180 --> 00:25:56,580
在很多老电影和电视剧里你都能见到 VIC-20 的身影

374
00:25:56,580 --> 00:25:59,840
最近能见到的就是在电影《约翰·威克2》中

375
00:26:08,400 --> 00:26:14,040
很多科技巨头都是因为以 VIC-20 开始
作为他们的第一台电脑而著名的

376
00:26:14,040 --> 00:26:18,040
比如说 Space-X 和特斯拉的 CEO 埃隆·马斯克

377
00:26:18,059 --> 00:26:21,110
林纳斯·托瓦兹，Linux 的创作者

378
00:26:21,110 --> 00:26:24,920
这个电脑帮助了很多人成就它们的未来

379
00:26:24,920 --> 00:26:28,460
VIC-20 在当时确实是伟大的机器

380
00:26:28,460 --> 00:26:30,060
价格也是非常合适

381
00:26:30,070 --> 00:26:32,960
因此它能够获得空前的成功也并不奇怪

382
00:26:32,960 --> 00:26:39,280
在市场上发售了五年，最后几年甚至降价到了 99 刀

383
00:26:39,280 --> 00:26:41,460
在1982年，它实际上是最好的
目前市场上销售的电脑相比，

384
00:26:41,460 --> 00:26:45,140
在 1982 年，相比市面上其它的电脑，它是销量最好的家用电脑

385
00:26:45,140 --> 00:26:48,460
实际上它在一年之内就卖出了将近一百万台

386
00:26:48,460 --> 00:26:52,920
这个机器肯定可以在出厂的时候预装更多的内存

387
00:26:52,920 --> 00:26:54,900
比如说 8K 或者更多

388
00:26:54,900 --> 00:27:00,100
这台电脑的软件设计的门槛也就提高了

389
00:27:00,100 --> 00:27:03,620
因为考虑到用户并不会有内存扩展卡

390
00:27:03,620 --> 00:27:08,600
这样就有可能会涨价，也会影响销量

391
00:27:08,600 --> 00:27:13,960
当然，别忘了，VIC-20 成就了 C64 的成功

392
00:27:13,960 --> 00:27:17,400
也许是史上销量最好的电脑

393
00:27:17,400 --> 00:27:19,720
在下一集 Commodore 的历史

394
00:27:19,720 --> 00:27:21,620
这就是我要介绍的了

395
00:27:21,780 --> 00:27:25,240
你就可以知道这两台机器之间的相似性和不同之处了

396
00:27:25,240 --> 00:27:27,560
那么记得关注，我们下次再见

