1
00:00:11,700 --> 00:00:13,680
欢迎来到新一集的 8-Bit Guy

2
00:00:13,690 --> 00:00:19,470
这一集我要组装这个 PE6502 电脑

3
00:00:19,470 --> 00:00:23,360
这是一台要自己在家里组装的业余电脑

4
00:00:23,360 --> 00:00:25,020
实际上也只是原型产品

5
00:00:25,020 --> 00:00:30,600
它应该和 Apple I 兼容，因此你应该也能运行 Apple I 的软件

6
00:00:30,600 --> 00:00:32,520
还有 BASIC 什么的

7
00:00:32,520 --> 00:00:38,180
我跟设计出这个电脑的 Jason 通过电话聊了好长时间

8
00:00:38,180 --> 00:00:41,460
他说他喜欢称它为 Apple 1.5 兼容

9
00:00:41,460 --> 00:00:45,780
因为它远比 Apple I 强大，几乎就是 Apple II

10
00:00:45,780 --> 00:00:51,300
有趣的是，他准备对这个机器做一些改造

11
00:00:51,300 --> 00:00:53,060
就可以让它运行 Commodore BASIC

12
00:00:53,060 --> 00:00:57,580
Commodore 的一切都有，我想这很酷
(康懋达钙本性难移

13
00:00:58,020 --> 00:01:02,780
不过呢，我还是会把它装起来看看能得到什么

14
00:01:02,980 --> 00:01:06,620
然后会接上这个电视，不知道会如何

15
00:01:06,620 --> 00:01:07,940
那就开始装配看看能不能用吧

16
00:01:07,940 --> 00:01:12,020
这自封袋里装有所有你要装配这台电脑需要的所有配件

17
00:01:12,020 --> 00:01:15,180
先取出来看看

18
00:01:15,189 --> 00:01:18,569
我不知道这些配件是不是有一种什么包装的规律

19
00:01:18,569 --> 00:01:20,939
有的装到一个小袋子里

20
00:01:20,939 --> 00:01:24,039
看起来所有的小部件都在这个袋子里

21
00:01:24,039 --> 00:01:26,219
这就是板子了

22
00:01:26,219 --> 00:01:28,380
做工不错

23
00:01:28,380 --> 00:01:30,689
显然有很多地方要焊接了

24
00:01:30,689 --> 00:01:34,560
该上焊接台和工具了

25
00:01:34,560 --> 00:01:37,260
我还打算把说明书打印出来

26
00:01:37,260 --> 00:01:39,920
毕竟对着电脑看说明书不方便

27
00:01:41,040 --> 00:01:45,840
有十几页，我就双面打印，看起来也方便

28
00:01:46,920 --> 00:01:51,040
好了，有了电烙铁，有了说明书，有了板子

29
00:01:51,040 --> 00:01:52,600
还要一个万用表

30
00:01:52,600 --> 00:01:56,100
其中一个原因是，我需要万用表来测这些电阻的阻值

31
00:01:56,100 --> 00:01:57,100
你猜为什么

32
00:01:57,380 --> 00:01:59,320
我无法辨认这些电阻的色环

33
00:02:00,020 --> 00:02:04,060
他确实还附带了一个表格教你通过色环辨认电阻阻值

34
00:02:04,060 --> 00:02:10,080
然而问题是我有色盲，不能分辨棕色和绿色、紫色和蓝色

35
00:02:10,080 --> 00:02:14,760
色谱的大多数颜色我仍然能辨认，但就是棕色和紫色辨认不出来

36
00:02:14,760 --> 00:02:17,340
我就可以用万用表来测这些电阻阻值

37
00:02:17,340 --> 00:02:19,540
就可以把对应阻值的电阻安装到位

38
00:02:19,620 --> 00:02:23,560
再来一个成品效果图挺方便的

39
00:02:23,560 --> 00:02:25,980
有时这比看线路图更有用

40
00:02:26,380 --> 00:02:31,700
先从这些电阻下手，这对有色盲的我来讲是挑战

41
00:02:31,700 --> 00:02:33,580
我就是想去克服这一点

42
00:02:33,580 --> 00:02:38,760
然后，求不要发 E-mail 向我推销色盲用墨镜

43
00:02:39,200 --> 00:02:44,160
好消息是有些电阻不靠万用表就能辨认

44
00:02:44,160 --> 00:02:47,900
因为你看这有 10 个一样的电阻

45
00:02:47,910 --> 00:02:51,689
我只要对着 BOM 表看哪里有 10 个一样的电阻

46
00:02:51,689 --> 00:02:54,260
我就知道阻值了

47
00:02:54,260 --> 00:02:56,260
这 7 个也是如此

48
00:02:56,260 --> 00:02:58,739
就剩这些要测量了

49
00:02:58,740 --> 00:03:01,480
先从这 10 个开始

50
00:03:01,480 --> 00:03:03,600
我要通过 BOM 表来辨认

51
00:03:03,600 --> 00:03:06,600
先看看这些 1K 的电阻

52
00:03:06,600 --> 00:03:08,940
就从这个 R2 开始

53
00:03:08,940 --> 00:03:12,960
我可以看到 R2 在这里

54
00:03:12,960 --> 00:03:14,740
很遗憾没有 D2 对吧

55
00:03:14,750 --> 00:03:15,790
因此我们有 R2-D2 (《星球大战》的机器人)

56
00:03:15,790 --> 00:03:16,760
蛤♂蛤

57
00:03:17,400 --> 00:03:21,120
这就是 1K 电阻要装的地方了

58
00:03:21,129 --> 00:03:23,569
就先把它们装起来吧

59
00:03:23,569 --> 00:03:26,030
电阻很容易安装

60
00:03:26,030 --> 00:03:27,629
把引脚弯折

61
00:03:27,629 --> 00:03:29,700
方向无所谓

62
00:03:29,700 --> 00:03:33,540
不过同一个方向装进去就显得专(qiang)业(po)些(zheng)

63
00:03:33,540 --> 00:03:39,140
然后把引脚掰过来，电阻就不会在焊接的时候掉下来

64
00:03:39,520 --> 00:03:42,340
我还在等焊接台加热完成

65
00:03:42,340 --> 00:03:44,000
我应该早点打开的

66
00:03:44,000 --> 00:03:47,540
我使用的是默认值 750 华氏度(约 399℃)

67
00:03:48,380 --> 00:03:50,180
好了，可以开始动手了

68
00:03:50,180 --> 00:03:55,260
如果我从未提及，在焊接的同时录制其实是个很困难的事情

69
00:03:55,260 --> 00:03:58,580
既要保证角度合适

70
00:03:58,580 --> 00:04:01,540
又要保证手不会挡住镜头

71
00:04:01,540 --> 00:04:05,180
我经常要把身体往前倾以对准三脚架

72
00:04:05,180 --> 00:04:08,190
要是不录视频还更简单

73
00:04:08,190 --> 00:04:12,090
你看到我在焊接的时候手抖，倒不是因为帕金森综合征

74
00:04:12,090 --> 00:04:15,180
因为为了保证视频录制，焊接的姿势很别扭

75
00:04:15,940 --> 00:04:19,340
好的焊点就这样子的

76
00:04:19,340 --> 00:04:22,259
然后就可以用钳子剪掉多余的引脚

77
00:04:22,740 --> 00:04:25,860
还有好多电阻要焊

78
00:04:26,220 --> 00:04:30,640
每焊接上一个配件，我就在 BOM 上做个记号表示焊接上了

79
00:04:30,650 --> 00:04:35,770
好了，我把这些电阻焊上去了，只通过对照 BOM 表

80
00:04:35,770 --> 00:04:40,040
不通过测量或者辨认色环

81
00:04:40,040 --> 00:04:43,020
这是剩下的要辨认的了

82
00:04:43,020 --> 00:04:46,560
快进一点，我已经辨认完成了

83
00:04:46,560 --> 00:04:49,960
我都是同一个方向焊接的，看起来就很(qiang)舒(po)服(zheng)

84
00:04:49,960 --> 00:04:52,980
对我来讲这是最困难的部分

85
00:04:52,980 --> 00:04:54,880
我想剩下的就好办了

86
00:04:55,960 --> 00:04:58,650
然后就是这些小电容

87
00:04:58,650 --> 00:05:02,640
这些电容上的字太小了

88
00:05:02,640 --> 00:05:06,960
42 岁的我已经不能辨认上面的字了

89
00:05:06,960 --> 00:05:09,340
我就用这个放大镜

90
00:05:09,340 --> 00:05:12,220
这个挺方便，带 LED 灯

91
00:05:12,220 --> 00:05:16,640
如你所见，电容上的字就很清晰了，我都能轻易辨认

92
00:05:16,640 --> 00:05:21,380
好消息是这些电容数值一样

93
00:05:21,380 --> 00:05:23,680
坏消息是不能很好插到底

94
00:05:23,699 --> 00:05:25,060
两个引脚挨得太近了

95
00:05:25,060 --> 00:05:27,520
最多只能到这么深了

96
00:05:27,520 --> 00:05:29,820
实际上这并不罕见

97
00:05:29,820 --> 00:05:32,420
解决方法就是把引脚这样多弯曲一些

98
00:05:32,420 --> 00:05:36,000
这样就可以继续往下插了

99
00:05:36,000 --> 00:05:38,700
焊接好之后就是这样子

100
00:05:38,700 --> 00:05:41,080
不是很好，但起码能用

101
00:05:41,080 --> 00:05:44,460
焊完电容之后就是这个样子的

102
00:05:44,940 --> 00:05:46,780
然后就是这个排电阻了

103
00:05:46,780 --> 00:05:50,780
或者说就是共用了一个引脚的 6 个相同的电阻

104
00:05:50,780 --> 00:05:54,900
左边这个点的位置代表引脚 1

105
00:05:54,900 --> 00:05:59,440
然后看着板子的标注就可以对着正确的方向插进去

106
00:05:59,900 --> 00:06:03,700
就把它卡在这里，然后从另一边焊接

107
00:06:03,700 --> 00:06:06,460
正常情况下你需要三只手来完成这个焊接任务

108
00:06:06,460 --> 00:06:10,260
但我一般的做法就是一只手把排电阻按住

109
00:06:10,260 --> 00:06:16,460
然后把焊锡弯过来一点

110
00:06:16,500 --> 00:06:19,260
再来把板子拿过来焊接
(这种焊接方法容易烫伤手)

111
00:06:20,260 --> 00:06:23,960
我只需要把一个引脚焊接到位就可以把它固定住

112
00:06:23,960 --> 00:06:26,130
剩下的引脚就好对付了

113
00:06:26,130 --> 00:06:30,780
我还需要说的是，焊接板子的时候，先装矮的元件

114
00:06:30,780 --> 00:06:32,639
再来装高的元件

115
00:06:32,640 --> 00:06:37,860
这是我的习惯做法，而且这样就可以保证整个板子看起来是平的

116
00:06:37,860 --> 00:06:42,100
而且在安装的时候，小的元件不会挡住大的元件

117
00:06:42,200 --> 00:06:46,440
接下来就是要装这个 1MHz 的晶振

118
00:06:46,440 --> 00:06:49,780
这就是保持 6502 处理器的时钟运转的部件

119
00:06:49,780 --> 00:06:52,780
你也许会问应该哪个方向装进去

120
00:06:52,780 --> 00:06:56,680
你仔细看这里有个圆圈表示引脚 1

121
00:06:56,680 --> 00:06:58,840
当然，引脚 1 也在板子上标注了

122
00:06:58,840 --> 00:07:01,140
就这样装进去

123
00:07:01,140 --> 00:07:05,360
焊完之后引脚有点长，剪掉

124
00:07:05,360 --> 00:07:10,360
然后是 Parallax Propeller 芯片用的 5MHz 晶振

125
00:07:10,360 --> 00:07:14,100
它没有极性，正反安装都可以

126
00:07:14,100 --> 00:07:16,180
放下去很合适

127
00:07:17,460 --> 00:07:20,620
这就是一个要用的二极管

128
00:07:20,630 --> 00:07:23,880
右边的条纹表示极性

129
00:07:23,880 --> 00:07:26,200
好消息是板子上也标注了

130
00:07:26,200 --> 00:07:30,440
标注着 D1 和那个条纹

131
00:07:30,449 --> 00:07:34,570
和焊电阻一样，这样弯曲引脚装进去

132
00:07:34,570 --> 00:07:36,660
刚刚好

133
00:07:37,940 --> 00:07:40,639
还有这个三极管

134
00:07:40,639 --> 00:07:44,419
你需要知道的是这个三极管有一面是平的

135
00:07:44,419 --> 00:07:47,759
看到这个板子已经给你标好了，Q1

136
00:07:47,759 --> 00:07:49,650
你可以很容易辩认出平的一面

137
00:07:49,650 --> 00:07:52,880
问题就是中间的引脚要弯出来一点

138
00:07:53,280 --> 00:07:55,080
我一般会先把中间的引脚弯成这样

139
00:07:55,080 --> 00:07:58,439
然后再用尖嘴钳这么弯曲回来

140
00:07:58,440 --> 00:08:00,620
这样就能很好装进去了

141
00:08:01,100 --> 00:08:03,360
你看这样装就很好了

142
00:08:03,800 --> 00:08:05,780
BOM 表上再做个记号

143
00:08:05,789 --> 00:08:11,000
然后是这两个牛角瞬时按钮开关，用于复位

144
00:08:11,000 --> 00:08:14,120
一个装在这里用来重置 Propeller 芯片

145
00:08:14,120 --> 00:08:16,400
一个装在这里来重置 CPU

146
00:08:16,400 --> 00:08:20,020
这个虽然看起来是正方形能随便装进去

147
00:08:20,020 --> 00:08:24,540
实际上也有点矩形，只能一个方向装进去，不用担心

148
00:08:25,020 --> 00:08:28,240
对齐之后就需要用点力按下去

149
00:08:29,760 --> 00:08:32,400
然后要焊接的是这些排针

150
00:08:32,419 --> 00:08:35,950
需要警告，它们两面都是铜

151
00:08:35,950 --> 00:08:40,660
如果用手捏着它从另一面焊接，热量会传导过来

152
00:08:40,660 --> 00:08:42,320
会把手烫伤

153
00:08:42,329 --> 00:08:44,560
这个装这里

154
00:08:44,560 --> 00:08:48,740
我建议你在焊接的时候要注意你要碰的引脚

155
00:08:48,740 --> 00:08:52,720
当然只要把一个焊好了剩下的就好办了

156
00:08:53,800 --> 00:08:58,200
接下来就是装插座了，从这些开始

157
00:08:58,200 --> 00:09:00,760
安装插座的时候要注意这里的缺

158
00:09:00,760 --> 00:09:03,660
确保和主板上标注的缺口对准

159
00:09:04,420 --> 00:09:08,660
再快进一点，这两个我都装起来了

160
00:09:08,660 --> 00:09:11,070
然而还有这些插座要装

161
00:09:11,070 --> 00:09:14,230
很得花些时间来安装

162
00:09:14,230 --> 00:09:19,010
我尝试用一只手按住插座焊接，就像排电阻那样

163
00:09:19,010 --> 00:09:22,320
把第一个引脚焊到位

164
00:09:22,320 --> 00:09:26,900
然后把板子转过来焊另一个引脚

165
00:09:27,940 --> 00:09:30,560
把两角的引脚都焊上了

166
00:09:30,570 --> 00:09:32,790
焊的不是很好

167
00:09:32,790 --> 00:09:37,200
至少我还能把插座固定住焊接其它的引脚

168
00:09:38,000 --> 00:09:41,600
这个时候我想再次检查一下板子是不是平整的

169
00:09:41,600 --> 00:09:44,780
以及是不是方向正确

170
00:09:44,780 --> 00:09:47,160
进行这个过程是很痛苦的

171
00:09:48,120 --> 00:09:49,680
我现在可以焊接剩下的引脚

172
00:09:49,720 --> 00:09:55,500
趁这个时候，我建议你第一次焊接的时候不要拿这种板子

173
00:09:55,640 --> 00:09:58,240
我建议你去焊接小一点便宜一点的

174
00:09:58,240 --> 00:10:01,680
如果有点缺乏经验的话，焊接这种大板子

175
00:10:01,680 --> 00:10:02,980
就会给你相当多的锻炼

176
00:10:03,260 --> 00:10:08,080
我还得说，很多人还希望我做个如何焊接的视频

177
00:10:08,089 --> 00:10:11,890
说实话，别的 YouTube 频道做的这些视频已经很到位了

178
00:10:11,890 --> 00:10:14,320
我经常就推荐 EEVBlog 的一个视频

179
00:10:14,320 --> 00:10:16,840
我想这应该介绍的面面俱到了

180
00:10:17,120 --> 00:10:21,140
我用的是含铅焊锡，对我来讲焊接起来就更加容易

181
00:10:21,140 --> 00:10:22,830
效果也更好

182
00:10:22,830 --> 00:10:27,680
同时也有排气扇将油烟排出去

183
00:10:27,840 --> 00:10:32,020
焊完之后我也会洗手来去除残留物

184
00:10:32,020 --> 00:10:37,060
有些人会问为什么要会想到要自己装配

185
00:10:37,070 --> 00:10:39,620
说实话这样玩才有趣

186
00:10:39,620 --> 00:10:42,120
看起来就像是狂人的拼图

187
00:10:42,120 --> 00:10:45,540
就需要花上几个小时安装

188
00:10:45,540 --> 00:10:48,260
装完之后能不能用还说不准呢

189
00:10:48,660 --> 00:10:51,750
问题来了

190
00:10:51,750 --> 00:10:55,640
还剩下一个配件，缺了一个插座

191
00:10:55,640 --> 00:10:59,899
就是装在这里的 MAX232 串口控制器

192
00:10:59,899 --> 00:11:03,160
我估计需要直接焊接这个芯片

193
00:11:03,160 --> 00:11:04,389
还好吧

194
00:11:04,389 --> 00:11:06,680
我是说，不一定非要插座

195
00:11:06,680 --> 00:11:10,580
插座的好处就是如果芯片出于任何原因炸了

196
00:11:10,580 --> 00:11:12,540
可以轻易更换

197
00:11:12,540 --> 00:11:16,600
不过别的芯片都有插座，我想没什么问题

198
00:11:17,640 --> 00:11:21,020
然后就是这些比较高的东西

199
00:11:21,020 --> 00:11:23,500
比如说这个系统总线

200
00:11:23,510 --> 00:11:27,610
你注意到的第一个问题就是太大了装不下

201
00:11:27,610 --> 00:11:28,750
没关系啊

202
00:11:28,750 --> 00:11:31,610
我直接用钳子剪下来就好

203
00:11:31,610 --> 00:11:34,580
好了，完美装进去

204
00:11:34,580 --> 00:11:37,440
然后就是这个 PS/2 键盘插座

205
00:11:37,440 --> 00:11:41,640
PS/2 现在有些过时了，不过有大量的 PS/2 接口键盘

206
00:11:41,640 --> 00:11:44,240
很容易找的

207
00:11:44,240 --> 00:11:46,680
装进去之后就是这样子的

208
00:11:48,560 --> 00:11:50,200
这是接下来要焊接的东西

209
00:11:50,201 --> 00:11:52,350
复合视频接口

210
00:11:52,350 --> 00:11:54,980
电视或显示器要接这里

211
00:11:54,980 --> 00:11:56,520
这个接口有很大的针脚

212
00:11:56,520 --> 00:11:59,760
意味着能够为插拔接口提供足够的支撑

213
00:12:00,760 --> 00:12:05,860
最后就是这个 DC 电源接口，标准圆口

214
00:12:06,260 --> 00:12:08,960
我还得说这个套件不附带电源

215
00:12:09,520 --> 00:12:11,780
总之接口就这么插的

216
00:12:11,900 --> 00:12:14,060
这也有很大的引脚

217
00:12:14,060 --> 00:12:17,240
能够为插拔接口提供足够的支撑

218
00:12:17,400 --> 00:12:21,720
我就不说我一生中有多少笔记本的电源接口被怼坏了

219
00:12:21,720 --> 00:12:23,820
经常就是因为别人不小心绊到电源线了

220
00:12:23,820 --> 00:12:26,829
然后就是这个电源 LED 指示灯

221
00:12:26,829 --> 00:12:30,680
你注意到一个引脚比另一个长

222
00:12:30,680 --> 00:12:32,460
那就是极性引脚

223
00:12:32,790 --> 00:12:36,500
注意到板子上标注这个平的这一边，指的就是负极

224
00:12:36,500 --> 00:12:39,620
所以短的引脚要插到这一边

225
00:12:40,500 --> 00:12:42,880
然后是这两个稳压器

226
00:12:42,880 --> 00:12:46,100
一个是给 6502 的 5V

227
00:12:46,100 --> 00:12:48,600
另一个是给 Propeller 芯片的 3.3V

228
00:12:48,960 --> 00:12:51,660
只要对齐白色的这一面就好

229
00:12:51,660 --> 00:12:52,700
很简单的

230
00:12:54,580 --> 00:12:58,240
最后还要装这些电解电容

231
00:12:58,240 --> 00:13:00,640
先从这个大的开始

232
00:13:01,360 --> 00:13:05,560
这些电解电容是分极性的，不要装反了

233
00:13:05,920 --> 00:13:08,620
你注意到这一边有条纹

234
00:13:08,620 --> 00:13:10,720
这就要和板子上的极性对齐了

235
00:13:11,360 --> 00:13:15,360
这个板子和其它的那些带电解电容的套件不同

236
00:13:15,480 --> 00:13:20,560
这个电解电容是装到C21这里的，但是这里画的是方的

237
00:13:20,570 --> 00:13:25,029
我想他一开始是打算用钽电容什么的

238
00:13:25,029 --> 00:13:29,080
不过还是标注了极性，就可以对准装进去

239
00:13:29,080 --> 00:13:31,410
完美装进去

240
00:13:31,410 --> 00:13:33,880
把引脚弯过来以便焊接

241
00:13:33,880 --> 00:13:37,960
焊接工作到这里快结束了

242
00:13:37,960 --> 00:13:42,740
这里是开关的焊点，不过实际上套件并未附带开关

243
00:13:43,300 --> 00:13:47,460
这个是选配的部件

244
00:13:47,580 --> 00:13:51,500
对我来讲我就用多余的这些引脚来焊上去

245
00:13:51,500 --> 00:13:55,860
跳过，到这里焊上去之后，我就用跳线帽作为开关

246
00:13:55,860 --> 00:13:58,680
只要把跳线帽装上就会一直通电

247
00:13:58,680 --> 00:14:02,520
以后加装电源开关也会很方便

248
00:14:02,520 --> 00:14:07,200
最后清理现场

249
00:14:07,720 --> 00:14:12,040
最后，把这些芯片装进插座

250
00:14:12,440 --> 00:14:13,440
那就开始动手吧

251
00:14:13,520 --> 00:14:16,580
先从 6502 开始

252
00:14:16,580 --> 00:14:20,560
不管你信不信，这是崭新的芯片，西部数据做的

253
00:14:20,560 --> 00:14:23,780
我还不知道今天 6502 能拿来干什么

254
00:14:23,780 --> 00:14:27,660
不过这是我接触过的最新的 6502 了

255
00:14:28,300 --> 00:14:30,700
把它装进插座

256
00:14:30,700 --> 00:14:34,350
我弯曲了一下引脚，方便对齐

257
00:14:34,350 --> 00:14:38,900
把这些针脚对齐很重要，否则按下去的时候

258
00:14:38,900 --> 00:14:41,820
一个或多个引脚会折弯

259
00:14:41,820 --> 00:14:47,160
这些小芯片也是一样，确保芯片缺口方向

260
00:14:48,980 --> 00:14:50,660
这是固件 ROM 芯片

261
00:14:50,660 --> 00:14:52,600
把它装上

262
00:14:52,660 --> 00:14:55,760
装上去很难，不过大力出奇迹

263
00:14:56,640 --> 00:15:00,220
然后是负责视频显示的 Propeller 芯片

264
00:15:00,220 --> 00:15:03,140
毕竟都买不到原装的 Apple I 图像芯片了

265
00:15:04,240 --> 00:15:10,480
这是静态 RAM 芯片，我想有 32K，比原装 4K 多多了

266
00:15:12,020 --> 00:15:16,820
这就是一个如果没对准引脚就把芯片怼进去的很好例子

267
00:15:16,820 --> 00:15:21,380
幸好我在装进去的时候注意到了，我就把它取出来弯回去

268
00:15:21,940 --> 00:15:24,660
好了完工了

269
00:15:24,660 --> 00:15:26,009
最后就是测试了

270
00:15:26,009 --> 00:15:28,100
我需要一个电源

271
00:15:28,100 --> 00:15:29,639
但愿能用

272
00:15:29,640 --> 00:15:33,380
这个电源接口对的上，不过 6.5V

273
00:15:33,380 --> 00:15:36,340
虽然说明书说要 9V，不过这个应该可以用

274
00:15:36,340 --> 00:15:39,280
因为它要求一个 6.5V 到 9V 之间的电源

275
00:15:39,820 --> 00:15:42,940
实际上这是 Speak & Spell 的电源

276
00:15:42,940 --> 00:15:44,410
不管怎么样，我想这个能用

277
00:15:44,410 --> 00:15:47,319
然后就需要一个标准的复合视频线缆

278
00:15:47,319 --> 00:15:48,959
我还需要这个老 PS/2 键盘

279
00:15:48,959 --> 00:15:51,730
尺寸刚刚好

280
00:15:51,730 --> 00:15:57,300
接上键盘，然后接上视频输出线缆

281
00:15:57,300 --> 00:15:59,160
现在开始看看会不会冒烟

282
00:15:59,280 --> 00:16:02,820
如果有什么巨大错误，这就是要找出来的了

283
00:16:04,820 --> 00:16:07,720
好消息是没冒烟

284
00:16:08,320 --> 00:16:10,920
坏消息是没有画面输出

285
00:16:10,990 --> 00:16:13,420
电源灯确实亮

286
00:16:13,430 --> 00:16:16,810
对于刚装好并不能用，我并不惊讶

287
00:16:16,810 --> 00:16:18,920
相反，刚装好就可以用我反而很吃惊

288
00:16:18,920 --> 00:16:23,180
装配时经常会有一些遗漏的细节

289
00:16:23,180 --> 00:16:25,670
一个小问题就会导致它不能开机

290
00:16:25,670 --> 00:16:28,060
但我很确信能解决这个问题

291
00:16:28,060 --> 00:16:31,220
然后开始常规的除错流程

292
00:16:31,940 --> 00:16:37,440
首先是测电压，确定是否稳定 5V

293
00:16:37,620 --> 00:16:39,220
确实是

294
00:16:39,220 --> 00:16:42,569
电源和稳压器工作正常

295
00:16:42,569 --> 00:16:46,209
然后就是更换这个给 Propeller 芯片用的串行 ROM

296
00:16:46,209 --> 00:16:51,220
出于一些原因他给了我两个，我来试试这个

297
00:16:51,220 --> 00:16:52,220
果然

298
00:16:52,340 --> 00:16:53,560
这就能用了

299
00:16:53,760 --> 00:16:55,290
大概是的吧

300
00:16:55,290 --> 00:17:00,740
我进入了 BASIC，试试输入什么东西，当然了，输出语法错误

301
00:17:03,100 --> 00:17:07,260
但我发现不管输入什么都输出语法错误

302
00:17:07,270 --> 00:17:10,520
或者说几乎什么都不能用

303
00:17:10,520 --> 00:17:11,900
它很不稳定

304
00:17:11,900 --> 00:17:14,280
每隔几秒就会重启

305
00:17:14,280 --> 00:17:19,700
大多数命令输进去会输出奇怪的结果或者直接导致电脑重启

306
00:17:19,700 --> 00:17:21,440
我想一定是哪里出了问题

307
00:17:21,440 --> 00:17:25,480
我想肯定还有哪里出了问题，我花了很多时间去排查

308
00:17:25,480 --> 00:17:27,910
但就是找不出问题

309
00:17:27,910 --> 00:17:33,610
说明书让我在最后洗板底

310
00:17:33,610 --> 00:17:35,980
也就是我将要做的了

311
00:17:35,980 --> 00:17:39,480
我在做的时候有些着急，于是就忽略了这一步

312
00:17:39,480 --> 00:17:44,260
我没意识到这一步有多重要，毕竟上面残留的流体仍然导电

313
00:17:44,360 --> 00:17:46,340
我想这从未发生在我身上

314
00:17:46,340 --> 00:17:52,500
不过最后呢，我就拿牙刷蘸酒精花了点时间洗板子

315
00:17:52,500 --> 00:17:58,700
然后在水槽里冲洗，花了几个小时烘干

316
00:17:58,700 --> 00:18:01,560
我还用压缩空气吹走了残留的水

317
00:18:01,560 --> 00:18:04,490
这之后再开机，完美使用

318
00:18:04,490 --> 00:18:05,730
非常稳定了

319
00:18:05,730 --> 00:18:08,760
我们来看看它能干什么吧

320
00:18:08,760 --> 00:18:13,040
首先，一开机显示进入 Wozmon，是沃兹尼亚克监视器
(Wozniak Monitor)

321
00:18:13,040 --> 00:18:15,660
它是很简单的操作系统

322
00:18:15,660 --> 00:18:17,040
举几个能做什么的例子吧

323
00:18:17,040 --> 00:18:20,380
比如说输入一个内存地址，像 2000

324
00:18:20,380 --> 00:18:24,280
它会告诉我这个内存地址存放的数据，这里显示 FC

325
00:18:24,280 --> 00:18:26,240
当然都是十六进制

326
00:18:26,240 --> 00:18:30,810
如果想看一片区域的内存数据，输入一个地址，一个小数点

327
00:18:30,810 --> 00:18:31,810
再输入另一个地址

328
00:18:31,810 --> 00:18:35,400
它就会显示这一区域内的所有数值

329
00:18:35,400 --> 00:18:38,120
ROM 内置了两种版本的 BASIC

330
00:18:38,120 --> 00:18:44,460
就可以通过输入一个内存地址和一个 R 来加载
现在我在整型 BASIC 上

331
00:18:44,460 --> 00:18:47,020
当然，在 Apple的 BASIC 上用起来更舒服

332
00:18:47,020 --> 00:18:48,340
我就用这个了

333
00:18:49,020 --> 00:18:50,420
当然，展示 BASIC 的时候

334
00:18:50,420 --> 00:18:53,540
大家就会写一串循环程序反复显示字符串

335
00:18:53,540 --> 00:18:55,180
我也是

336
00:18:55,460 --> 00:18:58,160
然而我会写一些更有趣的东西

337
00:18:58,160 --> 00:18:59,630
这叫随机迷宫

338
00:18:59,630 --> 00:19:02,670
我经常在 Commodore VIC-20 和 C64 上这么玩

339
00:19:02,670 --> 00:19:05,910
效果并不是很好，毕竟线没有挨在一起

340
00:19:05,910 --> 00:19:08,760
不过注意看仍然能看出迷宫

341
00:19:08,760 --> 00:19:14,540
你也许会想它还能干什么，毕竟没软驱、SD卡插槽

342
00:19:14,540 --> 00:19:17,620
以及其它任何将程序复制进去的方法

343
00:19:17,620 --> 00:19:20,780
原装 Apple I 至少还有个磁带接口

344
00:19:20,780 --> 00:19:22,460
这个甚至都没有

345
00:19:22,460 --> 00:19:26,480
唯一能在上面使用程序的方法就是手动敲进去

346
00:19:26,480 --> 00:19:28,900
通过 BASIC 或机器代码

347
00:19:28,900 --> 00:19:32,500
然而它还有串行接口，进行起来容易得多

348
00:19:32,500 --> 00:19:35,820
我就把它接到我的老笔记本上

349
00:19:35,820 --> 00:19:38,520
我先试试我最喜欢的终端应用 Telix

350
00:19:38,520 --> 00:19:41,040
然而它并不想在上面运行

351
00:19:41,040 --> 00:19:44,640
我还是用 Windows 95 下的超级终端吧

352
00:19:44,640 --> 00:19:49,020
按照说明书，要把波特率设置到 115200 Bps

353
00:19:49,020 --> 00:19:52,640
好了，屏幕就显示的 READY 了

354
00:19:53,400 --> 00:19:57,500
然后就选择传输 - 文本文件

355
00:19:57,500 --> 00:19:58,500
来通过串行接口传输

356
00:19:58,820 --> 00:19:59,820
我选择这个 Microchess

357
00:19:59,900 --> 00:20:04,860
当我这么做之后，你就可以看到屏幕上大量滚动机器代码

358
00:20:04,870 --> 00:20:08,090
电脑认为有人在手动输入机器代码

359
00:20:08,090 --> 00:20:13,080
然而它没想到是通过另一台电脑键入的，所以输入速度极快

360
00:20:13,320 --> 00:20:18,020
跑完之后，游戏就会自动开始

361
00:20:18,120 --> 00:20:21,640
我还没玩过，不知道如何玩

362
00:20:21,650 --> 00:20:23,590
我先选择 0

363
00:20:23,590 --> 00:20:26,350
我不知道这是什么意思

364
00:20:26,350 --> 00:20:29,020
我甚至都没搞懂我要干什么

365
00:20:29,020 --> 00:20:31,560
我估计我需要输入命令告诉电脑我要移动哪颗棋子

366
00:20:31,560 --> 00:20:33,580
不管怎么样之后还是读说明书看看

367
00:20:33,580 --> 00:20:37,840
同理，你也能用一样的方法传输 BASIC 程序

368
00:20:37,840 --> 00:20:40,880
首先我们这里进入 Apple BASIC

369
00:20:40,880 --> 00:20:43,560
然后通过串行接口传输 HANGMAN 游戏

370
00:20:44,280 --> 00:20:47,920
同样的，这看起来就像是我在高速输入 HANGMAN 的游戏代码

371
00:20:49,320 --> 00:20:52,420
当写完之后它报错了

372
00:20:52,420 --> 00:20:54,780
我想它是为整型 BASIC 设计的

373
00:20:54,780 --> 00:20:58,200
我就切换过去再来一遍

374
00:20:58,210 --> 00:21:00,840
跳过，果然可以用

375
00:21:00,840 --> 00:21:05,160
输入 E，不对，输入 S，不对

376
00:21:05,160 --> 00:21:10,400
U，或者是 R，T……天哪到底是什么

377
00:21:10,400 --> 00:21:14,150
输完字母之后，出来竟然是 FLY

378
00:21:14,820 --> 00:21:17,020
再来试试下一个

379
00:21:17,030 --> 00:21:18,030
这是跳棋

380
00:21:18,030 --> 00:21:22,340
要不看说明书我还是不知道如何操作

381
00:21:22,340 --> 00:21:23,460
所以之后再看吧

382
00:21:23,660 --> 00:21:28,880
好吧我对上面的游戏真是不感冒

383
00:21:28,880 --> 00:21:30,520
我想我还是自己写一个吧

384
00:21:30,520 --> 00:21:32,790
我就在想要不要写个类似俄罗斯方块的游戏

385
00:21:32,790 --> 00:21:37,350
我在想要不要花几个小时写一个然后不要太花哨

386
00:21:37,350 --> 00:21:40,680
问题是我不知道如何标定屏幕内存

387
00:21:40,680 --> 00:21:43,940
网上去找 Apple I 的技术文档犹如大海捞针

388
00:21:43,940 --> 00:21:49,660
谷歌总是会找到像 iPhone 或 iPad 这样的 iOS 设备内容

389
00:21:49,660 --> 00:21:53,491
费了很久终于找到对应的资料

390
00:21:53,500 --> 00:21:56,380
我才发现 Apple I 的设计很奇特

391
00:21:56,380 --> 00:22:02,080
在屏幕的任何位置标定字符并不可能

392
00:22:02,080 --> 00:22:09,440
所以你唯一能做的就是通过屏幕控制器一次输出一个字符

393
00:22:09,440 --> 00:22:13,540
就会把字符从屏幕顶部一路往上输出

394
00:22:13,540 --> 00:22:19,960
然而让这些字符滚动回来并不可能

395
00:22:20,040 --> 00:22:23,160
硬件技能不允许这么做

396
00:22:23,160 --> 00:22:26,360
为了解释原因，我会给你展示一张图

397
00:22:26,360 --> 00:22:31,740
粗略展示了 80 年代典型的 8 位电脑的总线设计

398
00:22:31,750 --> 00:22:36,320
在 80 年代，一个典型的系统的 CPU 会和一个外设交互芯片工作

399
00:22:36,320 --> 00:22:40,010
它就用来连接键盘、摇杆和软驱等

400
00:22:40,010 --> 00:22:44,830
然后是走同一条总线到 CPU 的 ROM 和 RAM

401
00:22:44,830 --> 00:22:47,540
然后是这个共用了一部分 RAM 的图形芯片

402
00:22:47,540 --> 00:22:49,840
用来外接显示器显示各种东西

403
00:22:50,520 --> 00:22:55,800
然而 Apple I 既没摇杆，也没软驱，甚至没图形芯片

404
00:22:55,800 --> 00:22:57,900
至少很不传统

405
00:22:58,060 --> 00:23:03,680
它所用的就是在 70 年代常见的纯终端机

406
00:23:03,820 --> 00:23:08,740
它是和 PIA 芯片连接的，CPU 只会给它发送要显示的字符

407
00:23:08,740 --> 00:23:14,360
CPU 就完全没有能力控制字符显示的位置

408
00:23:14,500 --> 00:23:16,820
这些完全靠终端芯片控制

409
00:23:16,820 --> 00:23:22,380
这就意味着在 Apple I 上开发像俄罗斯方块
这样简单的游戏并不可能

410
00:23:22,620 --> 00:23:26,400
这就能够解释当时像象棋这样的游戏

411
00:23:26,400 --> 00:23:29,340
每下一步就会重新滚动屏幕画面

412
00:23:29,820 --> 00:23:33,040
这就限制了你用像这样的电脑能做的事情了

413
00:23:33,040 --> 00:23:37,560
不过这些引脚开放了完整的系统总线

414
00:23:37,560 --> 00:23:42,260
这就没有理由不外接一个图像芯片或是小 LCD

415
00:23:42,500 --> 00:23:47,080
我会在之后的某一集让它们能够使用

416
00:23:47,080 --> 00:23:49,460
虽然就是这么小的电脑

417
00:23:49,460 --> 00:23:53,200
通过这个扩展插槽你就可以在上面作出任何可能的改造

418
00:23:53,200 --> 00:23:56,860
我估计你还可以加装 SID 芯片，如果你愿意的话

419
00:23:57,580 --> 00:24:01,640
如果谁能做出一个像这样子能跑 Commodore BASIC 的兼容机

420
00:24:01,640 --> 00:24:03,880
那我会感到深深的佩服的

421
00:24:03,880 --> 00:24:07,850
真正的屏幕编辑器、BASIC 和 Commodore 内核

422
00:24:07,850 --> 00:24:11,280
不一定非要兼容 C64 或 VIC-20

423
00:24:11,280 --> 00:24:17,820
至少有一个环境能够让你移植各种各样的程序

424
00:24:17,820 --> 00:24:21,220
这也是我所喜欢的

425
00:24:21,380 --> 00:24:24,360
我想还是有必要加一个 SD 卡槽

426
00:24:24,360 --> 00:24:28,300
这样读写程序会更加现代化

427
00:24:28,420 --> 00:24:32,060
我也许自己会试试看，不过我没时间了

428
00:24:32,060 --> 00:24:34,370
也有点超出我的能力了

429
00:24:34,370 --> 00:24:39,660
如果你们谁有这样的自制套件想送给我

430
00:24:39,660 --> 00:24:44,620
请尽管联系我，我之后也许会展示它的

431
00:24:44,780 --> 00:24:47,840
不过，这一集到这里也要结束了

432
00:24:47,840 --> 00:24:49,460
记得关注下一集，感谢观看

