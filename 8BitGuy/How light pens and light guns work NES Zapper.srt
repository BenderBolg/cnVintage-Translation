1
00:00:10,300 --> 00:00:12,450
欢迎来到新一集的8-Bit Guy

2
00:00:12,450 --> 00:00:17,020
今天给大家展示下80年代很有趣的两项技术

3
00:00:17,020 --> 00:00:25,080
第一个是光笔（Light Pen） 基本上就是一个用于绘画 和正常操作系统使用的指向设备

4
00:00:25,080 --> 00:00:29,000
另外一个要展示的这是Zapper Gun

5
00:00:29,000 --> 00:00:36,040
也就是用于NES一部分游戏上的光枪（Light Gun） 大部分其它的8-Bit系统也有类似的附件

6
00:00:36,140 --> 00:00:39,680
两者的技术原理都是感应光

7
00:00:40,020 --> 00:00:42,560
然而这可能是他们唯一的共同点了

8
00:00:42,570 --> 00:00:45,290
所以本期我们就来简要讲讲他们的工作原理

9
00:00:45,660 --> 00:00:51,180
光笔其实是个非常非常简单的设备 里面只有一个镜片和一个光线传感器

10
00:00:51,930 --> 00:00:56,550
把它放到屏幕上 电脑马上就会知道你在指哪里

11
00:00:57,430 --> 00:01:03,469
大屏幕 小屏幕 彩色屏幕 黑白屏幕 都可以正常使用

12
00:01:03,469 --> 00:01:07,670
我曾经一直想不明白这个笔是如何定位的

13
00:01:09,080 --> 00:01:14,560
然而实际结果是 电脑并不知道它在屏幕的什么地方

14
00:01:14,570 --> 00:01:16,760
而是 什么时候

15
00:01:16,760 --> 00:01:20,900
可能你们很多都知道 就是当看这种老式CRT的时候

16
00:01:20,900 --> 00:01:28,020
虽然肉眼看起来是一个完整清晰的图像 但是实际上这是由于视觉暂留形成的

17
00:01:28,130 --> 00:01:37,160
基本上来说 我们眼睛的速度不足以看清楚同时只能点亮一个的移动像素

18
00:01:37,160 --> 00:01:41,310
这也就类似于在晚上能用这种烟花或者手电筒画出圈

19
00:01:41,310 --> 00:01:46,460
尽管光在某个时刻只在一个特定地点出现

20
00:01:46,460 --> 00:01:52,910
所以说，要用摄像头捕捉静态图像实际上并不容易

21
00:01:52,910 --> 00:01:57,640
所以 当你看这段视频的时候 大概能看见滚动的线或者之类的东西 在屏幕上移动

22
00:01:57,640 --> 00:02:01,720
然而我站在这里看不见

23
00:02:01,720 --> 00:02:07,160
很遗憾 这是由于摄像头和CRT不同步造成的

24
00:02:07,160 --> 00:02:13,140
所以在实际情况中 在一个特定时刻 屏幕上只有一个像素是被点亮的

25
00:02:13,140 --> 00:02:18,150
所以说 电脑知道什么时候 什么像素会被点亮

26
00:02:18,150 --> 00:02:22,790
于是我做了一个模拟来解释看起来是什么样的

27
00:02:22,790 --> 00:02:28,160
如果你能够减慢CRT的电子束你就能看见它

28
00:02:29,160 --> 00:02:33,500
另外我还放大了像素 看起来会更加方便一些

29
00:02:35,990 --> 00:02:39,950
如果还能再慢一点的话，就会是这样

30
00:02:39,950 --> 00:02:46,569
最终 速度足够慢的时候 同时真得只能看见一个像素

31
00:02:46,569 --> 00:02:50,230
如果真得很慢很慢的话 就是这样的

32
00:02:51,240 --> 00:02:55,440
最终 在光笔下的像素会被点亮

33
00:02:55,450 --> 00:03:00,420
光笔也就会检测到 随后把信息传送到电脑

34
00:03:00,420 --> 00:03:05,030
电脑也就会知道信号来的时候显示到哪个像素

35
00:03:05,030 --> 00:03:09,490
这样 也就知道了光笔在屏幕上的坐标

36
00:03:12,660 --> 00:03:15,500
很棒的一点是 屏幕不需要触摸屏幕就可以定位

37
00:03:15,520 --> 00:03:19,480
距离屏幕数英寸都还能正常工作

38
00:03:19,480 --> 00:03:22,320
有些光笔上面有按键

39
00:03:22,320 --> 00:03:28,140
这一个笔的按键在前面 所以按屏幕重一点就能触发按键

40
00:03:28,720 --> 00:03:34,100
有一些笔的在侧面 还有一些像Trojan这种的没有按钮

41
00:03:34,470 --> 00:03:41,360
所以说C64上使用光笔很烦的一点就是软件和硬件的兼容性

42
00:03:41,360 --> 00:03:46,180
因为显然不同笔之间的按键接法不一定一样

43
00:03:46,180 --> 00:03:51,200
如果看C64的摇杆接口 可以发现有一条线是专门为光笔预留的

44
00:03:51,600 --> 00:03:56,099
这条线就是用于光传感器的 直接接入电脑内的视频芯片

45
00:03:56,099 --> 00:04:00,990
然而按键可以接到任意的这几个输入上

46
00:04:00,990 --> 00:04:04,620
举个例子 我这里有一份Koala Painter

47
00:04:04,620 --> 00:04:09,529
也就是我之前演示KoalaPad用的那个软件

48
00:04:09,529 --> 00:04:12,620
只不过这个版本被修改过 可以用光笔操作

49
00:04:12,620 --> 00:04:18,180
然而笔上的按钮却不起作用 可能是接到了错误的引脚上

50
00:04:18,190 --> 00:04:25,470
不过 还好软件允许使用键盘上的1来代替笔上的按钮

51
00:04:25,470 --> 00:04:29,169
所以我至少在这个软件内还能用这个笔

52
00:04:29,169 --> 00:04:32,599
另外我这还有一份光笔随机附送的软件

53
00:04:32,599 --> 00:04:36,680
而且这个软件还支持选择使用多种不同的指向设备

54
00:04:36,680 --> 00:04:40,840
笔上的按键在这个软件里就工作良好

55
00:04:40,840 --> 00:04:43,180
当然可能在其它平台上并没有这种问题

56
00:04:43,180 --> 00:04:49,540
我不是很确定 但是我知道Apple II、IBM PC 以及Atari 8-Bit系统也都可以使用光笔

57
00:04:50,480 --> 00:04:53,439
另外还有一个缺点

58
00:04:53,439 --> 00:04:57,759
在屏幕上的黑色区域 光笔是很难定位的

59
00:04:57,759 --> 00:04:59,139
而且原因很简单

60
00:04:59,139 --> 00:05:06,419
像素没有被点亮 笔看不见任何东西 所以电脑也就不知道笔在哪里

61
00:05:06,419 --> 00:05:11,560
他们似乎使用用闪烁的光标来补偿这个问题

62
00:05:11,560 --> 00:05:16,749
如果移动足够慢，可以让指针进入黑色区域 （UP主觉得闪烁单纯是因为绘图没有用缓冲）

63
00:05:16,749 --> 00:05:20,040
这样笔就能看见闪烁的光标

64
00:05:20,040 --> 00:05:24,020
另外一个缺点就是精确度

65
00:05:24,029 --> 00:05:28,800
笔有的时候可以检测到邻近的像素 这样返回的结果就不准确

66
00:05:28,800 --> 00:05:33,050
所以用手画出来的边缘就像被狗啃了一样

67
00:05:33,050 --> 00:05:45,240
根据官方说法 光笔横向只能区分大约160像素 而C64的总横向像素有320像素

68
00:05:45,240 --> 00:05:49,080
所以算是对精确度的大致概念 （分辨率不等于误差）

69
00:05:49,080 --> 00:05:52,759
这个Flexidraw软件还有一个叫做滤波的模式

70
00:05:52,759 --> 00:05:59,119
在这个模式下 软件会使用滤波算法来平滑笔迹 解决这个问题

71
00:05:59,120 --> 00:06:07,060
然而光笔还是只适合用在点击菜单、放大绘图这种 对精确度要求不高的场景下使用

72
00:06:07,949 --> 00:06:12,129
最后一点就是这些东西只能配合CRT使用

73
00:06:12,129 --> 00:06:15,280
因为LCD显示器的刷新机制和CRT完全不同

74
00:06:15,280 --> 00:06:19,939
光笔在LCD屏幕上完全没法使用

75
00:06:19,939 --> 00:06:24,579
现在我已经展示了光笔的使用 我觉得是时候讨论下

76
00:06:24,580 --> 00:06:29,619
为什么在80年代它们就没流行过 以及为什么最终被淘汰

77
00:06:29,619 --> 00:06:33,819
我决定让我的朋友罗宾（Robin）来解释下

78
00:06:33,819 --> 00:06:38,430
罗宾是个像素风游戏专业开发者 另外还有一个演唱关于古董电脑的音乐乐队

79
00:06:48,500 --> 00:06:53,580
他同样是Commodore DTV一体手柄的软件开发者

80
00:06:54,849 --> 00:06:59,490
这个我在之前的视频中介绍过 而且这之中还有个彩蛋

81
00:06:59,490 --> 00:07:04,349
在这里能看到开发团队的照片

82
00:07:04,349 --> 00:07:07,639
这个就是罗宾 当时他还没留胡子

83
00:07:08,420 --> 00:07:09,580
谢谢David

84
00:07:09,590 --> 00:07:12,610
以下是我认为的光笔没能流行开的几个原因

85
00:07:12,610 --> 00:07:14,629
你之前已经提到过精确度的问题

86
00:07:14,629 --> 00:07:18,979
至少在C64上 用光笔不可能做到像素级精确

87
00:07:18,979 --> 00:07:20,319
于是呢 就必须放大

88
00:07:20,319 --> 00:07:24,919
但是如果都放那么大了 其实可以直接用键盘或者摇杆

89
00:07:25,220 --> 00:07:28,000
这也是当时很多艺术家的做法

90
00:07:28,700 --> 00:07:30,460
另外你也提到了兼容性问题

91
00:07:30,780 --> 00:07:35,720
就是即使找到了一些值得使用的软件 也没法保证自己的光笔能正常使用

92
00:07:35,880 --> 00:07:40,580
因为没有一个标准来规定 光笔的按键（如果有的话） 应该如何连接到电脑上

93
00:07:41,300 --> 00:07:44,760
而且更何况这种附加的输入设备本来就很难取得成功

94
00:07:44,760 --> 00:07:48,760
除非有杀手级的应用或者良好的操作系统支持

95
00:07:49,000 --> 00:07:51,400
即使是现代的游戏主机也会有这个问题

96
00:07:51,409 --> 00:07:54,849
比如Kinect 而PS Move的表现就更差

97
00:07:54,849 --> 00:07:58,369
经管他们都还是第一方出品的产品

98
00:07:59,000 --> 00:08:02,740
更何况 光笔这种东西本身用起来就很不舒服

99
00:08:02,840 --> 00:08:05,580
你必须要伸开胳膊 到电视或者显示器前面

100
00:08:05,580 --> 00:08:12,020
几分钟还好 但是如果真得要干点事的话 手臂很快就会累

101
00:08:12,260 --> 00:08:18,080
要知道在当时 很多人把电视配合电脑使用 电视本身就不会在一个理想的位置

102
00:08:18,340 --> 00:08:20,680
即使有个单独的电脑显示器

103
00:08:20,680 --> 00:08:26,100
放置方式一般也是方便在打字时观看或者方便玩游戏 而不是方便书写

104
00:08:26,110 --> 00:08:28,870
在屏幕上用笔的想法本身不糟糕

105
00:08:28,870 --> 00:08:33,180
并且最终在90年代的 比如Palm Pilot这类的手持设备上取得了主流市场的认可

106
00:08:33,800 --> 00:08:39,740
这种使用起来体验好得多 因为小型轻型的屏幕可以被握在一个舒服的地方使用

107
00:08:41,340 --> 00:08:44,700
接下来我要来讲讲NES上的Zapper Gun

108
00:08:45,340 --> 00:08:50,260
大部分人应该都对这个很熟悉 因为这个枪经常和主机捆绑销售

109
00:08:50,260 --> 00:08:55,740
Duck Hunt也经常和超级马里奥兄弟捆绑在一张卡带上

110
00:08:57,420 --> 00:09:00,360
开始前先讲个冷知识

111
00:09:00,360 --> 00:09:05,209
我觉得可能很多人都没有发现 在玩Duck Hunt的时候

112
00:09:05,209 --> 00:09:08,840
可以接入第二个手柄来控制鸭子

113
00:09:08,840 --> 00:09:14,110
这个先不管 Zapper Gun在屏幕上是如何定位的

114
00:09:14,110 --> 00:09:19,270
你可能以为和光笔类似 考追踪CRT的电子束/光点来实现

115
00:09:19,320 --> 00:09:20,540
但是并不是

116
00:09:20,540 --> 00:09:23,910
实际上它的原理更为简单

117
00:09:23,910 --> 00:09:27,290
你会发现 如果按下扳机 即使没有对着屏幕

118
00:09:27,290 --> 00:09:30,529
也会能看见屏幕鸭子附近闪了一下

119
00:09:30,529 --> 00:09:34,660
接下来来放慢一帧帧看下

120
00:09:34,660 --> 00:09:38,529
按下扳机的时候 屏幕完全变黑一帧

121
00:09:38,529 --> 00:09:42,860
这样枪就可以校准 下一帧是一个白方块

122
00:09:42,860 --> 00:09:45,889
在下一帧回到正常的游戏界面

123
00:09:45,889 --> 00:09:50,669
也就是说 Zapper Gun就是在等那一帧的白色闪光

124
00:09:50,880 --> 00:09:54,880
如果你瞄准正确就能看见光 否则就不行

125
00:09:55,440 --> 00:10:00,080
如果从检测CRT光线角度来看 和光笔确实有点相似性

126
00:10:00,089 --> 00:10:03,990
然而光枪完全不知道自己对准的是屏幕的什么位置

127
00:10:03,990 --> 00:10:07,070
只知道 有没有闪光

128
00:10:07,070 --> 00:10:11,430
你可能还有疑问 如果它不知道指向屏幕的什么地方

129
00:10:11,430 --> 00:10:12,980
那两个鸭子怎么办

130
00:10:12,980 --> 00:10:15,889
再来看次慢动作

131
00:10:15,889 --> 00:10:20,129
一样的先是黑屏 然后下一帧有个闪光

132
00:10:20,129 --> 00:10:22,320
以及下一帧一个不同的闪光

133
00:10:22,320 --> 00:10:27,040
根据接收到的闪光时间不同 它就知道你打的是哪个鸭子了

134
00:10:27,040 --> 00:10:28,900
如果真得打到了的话

135
00:10:32,300 --> 00:10:36,640
现在来把Zapper Gun拆开来看看里面有什么

136
00:10:36,640 --> 00:10:40,340
拆解很简单 就这么几颗螺丝

137
00:10:40,400 --> 00:10:43,200
看起来这个完全就是装饰

138
00:10:43,860 --> 00:10:47,160
真正的东西都在里面

139
00:10:47,930 --> 00:10:51,630
一开始我还奇怪这个金属的圆柱体有什么用

140
00:10:52,089 --> 00:10:57,249
最终我认为 就是配重而已

141
00:10:57,490 --> 00:11:00,760
前面是个很简单的镜片

142
00:11:00,760 --> 00:11:05,750
有严重的划痕 不过大概是不影响功能的

143
00:11:05,750 --> 00:11:07,310
这个也有点迷

144
00:11:07,310 --> 00:11:10,630
不过我觉得依然是配重

145
00:11:10,630 --> 00:11:14,480
只是觉得为什么要做成这样让光通过

146
00:11:14,480 --> 00:11:16,620
而不是直接不放在光路上

147
00:11:17,080 --> 00:11:19,639
当然 这里才是真东西

148
00:11:19,639 --> 00:11:21,589
光线传感器

149
00:11:21,589 --> 00:11:25,420
这不是摄像头 只是能检测有没有光

150
00:11:25,420 --> 00:11:27,750
仅此而已

151
00:11:27,750 --> 00:11:32,100
下一个问题这是 为什么Zapper Gun没有在更多游戏中被采用

152
00:11:32,100 --> 00:11:37,420
这个问题我觉得还是问一下The Obsolete Geek 他对任天堂的历史比我了解更多

153
00:11:37,420 --> 00:11:39,320
看看他能不能解释这个问题

154
00:11:39,780 --> 00:11:40,580
谢谢 David

155
00:11:40,820 --> 00:11:46,060
其实很难讲为什么更多NES游戏没有支持光枪

156
00:11:46,069 --> 00:11:50,810
事实上还是有一些官方授权游戏支持的

157
00:11:50,810 --> 00:11:54,850
但是NES不是唯一的使用光枪的系统

158
00:11:54,850 --> 00:12:04,090
像比如世嘉的MasterSystem就支持 Atari的XEGS直接捆绑销售光枪

159
00:12:04,360 --> 00:12:08,620
然而这些平台上支持光枪的游戏就更少了

160
00:12:08,620 --> 00:12:12,760
当然 有些早期的光枪仿真度估计都可以拿着去抢银行了

161
00:12:12,760 --> 00:12:17,440
他们看起来和真枪一样 特别是这个为Magnavox Odyssey（一种游戏主机 发布于1972年）设计的

162
00:12:17,580 --> 00:12:21,640
如果让我猜一猜的话 我觉得没能维持热度的原因是

163
00:12:21,640 --> 00:12:24,460
这些东西玩起来确实有趣 但是并不能维持很长一段时间

164
00:12:24,470 --> 00:12:26,500
重复玩的价值太低了

165
00:12:26,500 --> 00:12:31,230
而且在大多数平台上 这些都是附加配件

166
00:12:31,230 --> 00:12:36,420
也就是说 如果游戏开发者让游戏需要搭配光枪使用

167
00:12:36,420 --> 00:12:43,180
那么他就得少卖很多游戏 因为更少的人有光枪

168
00:12:43,750 --> 00:12:49,550
当然 LCD显示器和电视的发展让这些技术都过时了

169
00:12:49,550 --> 00:12:58,270
光笔不能用了 因为屏幕上同时点亮的再也不是一个像素 没有电子枪在屏幕上扫描了

170
00:12:58,360 --> 00:13:02,111
Zapper Gun不能用的原因则是略微不同

171
00:13:02,120 --> 00:13:06,040
现代的LCD电视都会对图像进行处理

172
00:13:06,040 --> 00:13:12,140
这样信号进入电视和显示出来就会有几毫秒的延迟

173
00:13:12,140 --> 00:13:19,320
这就完全打乱了Zapper Gun的计时

174
00:13:19,329 --> 00:13:24,120
不过 他们还是计算机与游戏历史上很有趣的一部分

175
00:13:24,120 --> 00:13:25,660
希望大家看得开心

176
00:13:25,660 --> 00:13:28,230
认准这个频道，马上就会有更新哦