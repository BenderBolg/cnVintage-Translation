1
00:00:10,450 --> 00:00:12,610
欢迎观看新一集的The 8-Bit Guy

2
00:00:12,610 --> 00:00:16,059
这集中我想讲讲字符液晶屏的使用

3
00:00:16,059 --> 00:00:19,790
这些东西 至少在80年代就已经存在了

4
00:00:19,790 --> 00:00:21,840
各种老设备上都能见到它们的身影

5
00:00:21,840 --> 00:00:23,000
比如老电脑

6
00:00:23,800 --> 00:00:24,900
音乐键盘

7
00:00:26,680 --> 00:00:27,600
合成器

8
00:00:28,560 --> 00:00:29,400
计算器

9
00:00:29,600 --> 00:00:30,820
早期的手机

10
00:00:30,820 --> 00:00:31,900
打印机上

11
00:00:32,220 --> 00:00:34,720
而且现在仍然在服务器上广泛使用

12
00:00:34,720 --> 00:00:37,280
还有搭配单片机做一些业余项目

13
00:00:37,820 --> 00:00:40,180
而且这些屏幕真得相当便宜

14
00:00:40,180 --> 00:00:46,380
eBay上只要几美金 各种颜色 各种形状 各种尺寸

15
00:00:47,480 --> 00:00:50,060
最小的有8*1的

16
00:00:50,260 --> 00:00:56,180
另外常见的尺寸有8*2（0802） 16*2（1602） 还有20*4（2004）

17
00:00:56,800 --> 00:01:00,620
这些屏幕应该都是14脚或者16脚

18
00:01:00,700 --> 00:01:04,440
排列可以有各种形式 但是都应该是1到14

19
00:01:04,900 --> 00:01:08,280
我首先解释下这14个脚都是做什么的

20
00:01:08,840 --> 00:01:10,100
第一脚是地线

21
00:01:10,100 --> 00:01:12,219
下一个是+5V

22
00:01:12,220 --> 00:01:15,300
这两个就是给屏幕供电的

23
00:01:16,040 --> 00:01:19,900
下一个是用于设定屏幕对比度的

24
00:01:20,100 --> 00:01:23,759
常见的做法是接上电位器的中间脚 （其实UP主一般直接接地）

25
00:01:23,759 --> 00:01:28,210
另外两脚一脚接+5V 一脚接地

26
00:01:28,210 --> 00:01:33,100
这样提供的电压就一直是在0-5V之间随着旋钮变化

27
00:01:33,900 --> 00:01:36,460
下一个叫是寄存器选择 （Register Select，RS，也被称为A0、DC）

28
00:01:36,540 --> 00:01:39,480
屏幕可以接收两种类型的信息 

29
00:01:39,600 --> 00:01:44,160
一种是字符数据 也就是显示在屏幕上的文字

30
00:01:44,400 --> 00:01:54,660
另外一种则是指令 可以让屏幕进行一些如打开光标 初始化屏幕 设定自定义字符之类的功能

31
00:01:55,280 --> 00:01:59,000
所以你就想象可以有个开关 中间脚接上RS

32
00:01:59,000 --> 00:02:02,300
另外一边接5V 一边接地

33
00:02:02,560 --> 00:02:06,500
这样拨动开关就可以拉高或者拉低这个脚

34
00:02:06,600 --> 00:02:08,740
以此选择是要发送何种内容的数据

35
00:02:09,560 --> 00:02:11,420
下一个是读写选择（RW）

36
00:02:11,560 --> 00:02:17,160
是的，除了发送数据 还可以从屏幕读取数据

37
00:02:17,340 --> 00:02:20,500
拉高读取 拉低写入

38
00:02:21,080 --> 00:02:22,840
下一个是使能

39
00:02:22,840 --> 00:02:24,520
一会再回来提这个

40
00:02:24,840 --> 00:02:30,120
剩下8个引脚是数据线0-7 刚好表示一个8位的二进制数

41
00:02:30,400 --> 00:02:34,120
这些就像之前那些一样 需要置高或者置低

42
00:02:34,720 --> 00:02:36,100
回来讲这个使能脚

43
00:02:36,100 --> 00:02:37,800
这是最后一个谜团了

44
00:02:38,160 --> 00:02:41,740
基本上来说 就是其它脚你按照自己想要的设定好

45
00:02:42,060 --> 00:02:46,700
然后把这个引脚拉高 就会把那些信息传进屏幕 （有效的是变高这个过程）

46
00:02:47,500 --> 00:02:53,480
另外，有些屏幕有16脚  这些只是给背光供电用的

47
00:02:53,920 --> 00:02:56,540
我在各种东西上接过这类屏幕

48
00:02:56,540 --> 00:03:00,440
我也打算一会展示下如何把这个屏幕接上C64

49
00:03:00,440 --> 00:03:08,160
但是在那之前我想展示一下人肉驱动 不使用电脑

50
00:03:08,300 --> 00:03:10,400
就是完全只使用开关来驱动

51
00:03:10,560 --> 00:03:12,460
于是就做一个这样的东西吧

52
00:03:13,240 --> 00:03:16,800
我直接在画图工具里面画一下设计好了 我的想法是这样的

53
00:03:17,140 --> 00:03:20,020
首先这两脚肯定是接正极和负极

54
00:03:20,260 --> 00:03:21,700
这个是对比度

55
00:03:21,820 --> 00:03:24,560
一个开关来选择指令或者数据

56
00:03:25,000 --> 00:03:28,760
读写脚直接接地 因为我不打算用读取功能

57
00:03:28,760 --> 00:03:30,200
我只用写入就可以了

58
00:03:30,740 --> 00:03:33,180
接下来需要用一个按钮来充当使能

59
00:03:33,520 --> 00:03:36,340
还有8个钮子开关接数据脚

60
00:03:37,300 --> 00:03:40,660
于是我导本地的Fry's Electronic买了点开关

61
00:03:40,840 --> 00:03:44,620
在网上买起来便宜多 但是我不想等快递 

62
00:03:45,000 --> 00:03:47,520
这个单拨双掷开关应该可以 （我日抢钱啊）

63
00:03:48,140 --> 00:03:51,720
另外还需要一个开关接使能脚 我买了这个

64
00:03:52,380 --> 00:03:54,140
于是买了这些东西 （真 土豪）

65
00:03:55,100 --> 00:03:57,880
我找了这么个盒子来装东西

66
00:04:13,260 --> 00:04:17,900
我准备用这个之前在老ISDN猫上拆的1602液晶

67
00:04:55,800 --> 00:04:58,420
试试装上的效果

68
00:05:12,040 --> 00:05:14,160
行了开关都装好了

69
00:05:14,160 --> 00:05:17,800
这个让我想起了早期的Altair电脑 不过这个真是简单多了

70
00:05:20,680 --> 00:05:23,380
用于调节对比度的电位器

71
00:05:30,200 --> 00:05:31,600
这个是按钮

72
00:05:42,820 --> 00:05:46,000
另外我还有个可以装到电位器上的旋钮

73
00:05:47,920 --> 00:05:51,780
我打印了几个标签 标明各个按键的用途

74
00:05:57,240 --> 00:05:59,280
目前的样子就是这样的

75
00:06:02,080 --> 00:06:04,580
开始内部接线

76
00:06:07,340 --> 00:06:12,660
先用条线芯把这些引脚全部连起来

77
00:06:29,160 --> 00:06:37,160
而且接上了之后，我可以把别的需要取点的线接到中间这些空出来的地方

78
00:06:40,760 --> 00:06:42,480
另外还需要一条电源线

79
00:06:42,480 --> 00:06:49,300
USB是5V的 我就直接把USB拨开一点 然后焊上DC插口

80
00:06:49,940 --> 00:06:53,880
当然外壳上也需要开一个孔来安装DC插座

81
00:06:55,940 --> 00:07:01,780
一般来说我需要一堆细线的时候 我会直接拆一条废旧的线

82
00:07:01,780 --> 00:07:04,360
里面就有不少线了 （up表示直接淘宝买一包）

83
00:07:05,340 --> 00:07:10,680
很遗憾的时候 我打算开始焊线的时候 我注意到一个焊盘没了

84
00:07:10,680 --> 00:07:12,310
上面也就没法焊线了

85
00:07:12,760 --> 00:07:15,520
这些屏幕我就一直放着

86
00:07:15,520 --> 00:07:21,440
然后就焊接啊 拆焊啊 到处用

87
00:07:21,480 --> 00:07:22,880
经常就只是零时性的

88
00:07:23,040 --> 00:07:27,120
然后经常焊接 拆焊这些焊盘的一个副作用就是

89
00:07:27,140 --> 00:07:29,300
有的时候焊盘就直接掉了

90
00:07:29,580 --> 00:07:32,720
然而我还有一个一样的 我就用这个好了

91
00:07:33,000 --> 00:07:36,920
不过上面有些排线在 我得先拆了

92
00:07:37,820 --> 00:07:40,900
拆完后清理一下焊盘

93
00:07:41,080 --> 00:07:44,900
然后发现这次掉了两个焊盘

94
00:07:45,480 --> 00:07:47,700
那这屏幕也就废了 （看着up主着急 就不能用个好点的烙铁吗）

95
00:07:47,960 --> 00:07:51,980
我确实还有个LCD 但是是8*2的

96
00:07:51,980 --> 00:07:53,960
对于开口来说太小了

97
00:07:54,380 --> 00:07:58,360
所以看来是只能用更大的2004液晶了

98
00:07:58,680 --> 00:08:00,120
差不多能放下

99
00:08:00,500 --> 00:08:05,280
这个上面焊了排针 考虑到之前的情况

100
00:08:05,440 --> 00:08:09,720
我这次就不拆了 直接往排针上焊线

101
00:08:10,220 --> 00:08:14,300
完成后加上一点热缩管 确保安全

102
00:08:15,060 --> 00:08:16,700
我觉得应该完全没问题

103
00:08:17,800 --> 00:08:19,580
在盒子上切了一个更大的洞

104
00:08:19,580 --> 00:08:23,440
现在看起来就有点乱了 因为东西多了

105
00:08:23,920 --> 00:08:27,380
剩下的事情就是把线接到开关上了

106
00:08:28,040 --> 00:08:29,290
不过还有一个问题

107
00:08:29,290 --> 00:08:31,940
这个按钮只有2个引脚而不是3个

108
00:08:32,020 --> 00:08:35,180
所以就没有办法在高低之间切换

109
00:08:35,700 --> 00:08:38,940
如果一个引脚不接 那这个脚就是悬空状态

110
00:08:38,940 --> 00:08:43,680
这种情况应该被避免 因为这种情况下（如果引脚是高阻输入）状态就会高低自己变化

111
00:08:44,180 --> 00:08:47,300
于是做法就是对地接一个下拉电阻

112
00:08:47,300 --> 00:08:48,630
这样就会一直为低

113
00:08:48,880 --> 00:08:52,740
而按下按钮的时候 电阻的阻值肯定远大于接触电阻 于是可以被无视 这样就是高了

114
00:08:53,680 --> 00:08:54,740
来试试吧

115
00:08:55,140 --> 00:08:58,640
这里我打印了一份ASCII 二进制对照表

116
00:08:58,740 --> 00:09:01,360
还有几页纸 包括了屏幕所有的指令

117
00:09:02,100 --> 00:09:04,980
然而事情并没有朝着想象的方向发展

118
00:09:05,800 --> 00:09:06,800
行了

119
00:09:09,000 --> 00:09:11,000
情况是这样的

120
00:09:12,600 --> 00:09:17,720
这个是正常现象

121
00:09:17,720 --> 00:09:22,080
两行全黑（1602上就是1行）

122
00:09:22,590 --> 00:09:24,900
对比度可以用

123
00:09:25,840 --> 00:09:28,300
然而别的都不能用 最后我才发现

124
00:09:28,480 --> 00:09:37,260
我把按键的正负极都接反了

125
00:09:38,400 --> 00:09:42,160
于是 我得思考一会

126
00:09:42,160 --> 00:09:45,220
首先要打开显示

127
00:09:45,220 --> 00:09:51,120
首先是需要指令 那么就设定到数据

128
00:09:52,260 --> 00:09:57,160
然后这个应该是初始化命令

129
00:09:57,660 --> 00:09:58,440
行了

130
00:09:58,440 --> 00:09:58,940
可以

131
00:09:58,940 --> 00:10:01,720
看起来需要调一下对比度

132
00:10:04,440 --> 00:10:09,440
然后设定总线模式

133
00:10:14,780 --> 00:10:15,280
好了

134
00:10:15,980 --> 00:10:18,120
看看能不能发送一些数据

135
00:10:18,880 --> 00:10:22,380
有一个问题就是 我每次按键

136
00:10:23,280 --> 00:10:27,820
出来的字符总是多了几个

137
00:10:27,980 --> 00:10:30,340
这个是由于抖动造成的

138
00:10:31,010 --> 00:10:32,500
来讲讲抖动问题

139
00:10:32,500 --> 00:10:39,020
当开关上的两块金属接触的时候 你可能觉得就是一瞬间接上了

140
00:10:39,180 --> 00:10:43,000
但是实际上它们是反弹好几下最后才完全接上的

141
00:10:43,000 --> 00:10:48,220
虽然肉眼看不见（能听见） 但是这些电子器件速度足够快

142
00:10:48,220 --> 00:10:54,160
可以捕捉到这些抖动 感觉就像是你按了好几次按键一样

143
00:10:54,480 --> 00:10:57,580
解决办法就是增加一个电容

144
00:10:57,960 --> 00:11:03,280
这样因为电容充放电就需要一点时间

145
00:11:03,280 --> 00:11:05,560
也就是平滑了按钮的电位变化

146
00:11:05,840 --> 00:11:07,280
再来试一遍

147
00:11:07,600 --> 00:11:09,660
再试试

148
00:11:10,400 --> 00:11:11,300
初始化

149
00:11:11,300 --> 00:11:12,160
走着

150
00:11:14,500 --> 00:11:15,520
设置字体

151
00:11:17,260 --> 00:11:20,540
然后来送一些字符

152
00:11:22,900 --> 00:11:26,300
看起来去抖工作正常

153
00:11:27,920 --> 00:11:30,760
可以不带重复的发送字符了

154
00:11:31,500 --> 00:11:34,020
全部完成后的内部是这样的

155
00:11:34,400 --> 00:11:37,220
是时候把背板完全装上了

156
00:11:38,380 --> 00:11:40,560
虽然里面的这个开关是改不了了

157
00:11:40,560 --> 00:11:44,920
换一下标签还是可以的

158
00:11:45,280 --> 00:11:47,800
很遗憾数据线还是反的

159
00:11:49,060 --> 00:11:50,840
现在可以装上对比度旋钮了

160
00:11:52,600 --> 00:11:55,000
这里我打了一下我的名字

161
00:11:56,980 --> 00:12:01,940
如果你需要移动光标

162
00:12:01,940 --> 00:12:08,680
可以先设置到命令模式 然后00010000

163
00:12:10,280 --> 00:12:14,640
这样应该可以把光标左移

164
00:12:15,620 --> 00:12:23,000
然后改变下这位就可以往右移

165
00:12:24,040 --> 00:12:30,720
然而除了移动光标 还可以全屏移动

166
00:12:31,940 --> 00:12:32,440
就像这样

167
00:12:33,280 --> 00:12:36,240
再移回去

168
00:12:38,400 --> 00:12:43,300
玩这个可以了解到这个屏幕一些有趣的功能

169
00:12:44,080 --> 00:12:48,720
对比度调节也一切正常

170
00:12:50,220 --> 00:12:52,200
最后看下效果吧

171
00:12:52,340 --> 00:12:56,200
暗处效果 屏幕是有背光的

172
00:12:57,520 --> 00:13:00,920
我觉得这个算是个很有趣也很有教育意义的设备

173
00:13:00,920 --> 00:13:09,460
对于数电初学者来说 体验一下手动给屏幕发送二进制信息应该是挺不错的

174
00:13:09,660 --> 00:13:15,660
无论如何 我本来是打算展示下如何把这个接到C64的卡带口和用户口的

175
00:13:15,800 --> 00:13:17,940
但是这个视频有点长了

176
00:13:17,940 --> 00:13:20,480
于是我就打算分开做个Part 2

177
00:13:20,700 --> 00:13:23,460
所以 希望各位能关注后续的更新

178
00:13:23,750 --> 00:13:27,340
另外希望这个视频并没有技术性太强一类的

179
00:13:27,350 --> 00:13:30,540
我希望是能做更多技术性的视频

180
00:13:30,540 --> 00:13:36,550
但是我就怕太深了 有些观众可能不喜欢

181
00:13:36,550 --> 00:13:39,750
所以说 评论写出你的想法 我们下次见