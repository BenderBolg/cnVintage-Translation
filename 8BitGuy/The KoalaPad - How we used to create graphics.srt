1
00:00:09,920 --> 00:00:15,160
欢迎来到新一期的8-bit Guy！ 本期中我将为大家展示KoalaPad！

2
00:00:15,340 --> 00:00:22,940
这是一个来自1983年有趣的外设，主要被用于艺术设计

3
00:00:22,940 --> 00:00:26,720
不过它实质上就是一个指向设备 让我来展示下它是如何使用的

4
00:00:26,720 --> 00:00:33,280
他当时推出过C64、Apple II、IBM PC 以及Atari 8-bit系列计算机的版本

5
00:00:33,280 --> 00:00:36,840
我现在手上这个版本是为C64设计的

6
00:00:36,840 --> 00:00:40,420
这集中我将使用这台Commodore 64c

7
00:00:40,420 --> 00:00:42,000
它确实很少上镜

8
00:00:42,000 --> 00:00:44,600
大部分情况下我都是选择展示老款的“面包盒”C64

9
00:00:44,600 --> 00:00:45,940
不过这个用起来也是完全一样的

10
00:00:45,940 --> 00:00:48,740
甚至于有些方面我更喜欢这个型号

11
00:00:48,740 --> 00:00:51,840
打开包装可以看见 绘图板本体 一些说明书

12
00:00:51,840 --> 00:00:54,940
一个带有Koala painter软件的卡带

13
00:00:55,260 --> 00:00:58,640
这个软件同样也有软盘和磁带版本

14
00:00:58,640 --> 00:01:00,081
不过我更喜欢卡带版本

15
00:01:00,190 --> 00:01:02,170
因为根本不用载入直接就能用

16
00:01:02,170 --> 00:01:05,090
但是如果你要保存 则还是需要一个存储设备

17
00:01:06,280 --> 00:01:08,520
这个东西本来应该是带有一支笔的

18
00:01:08,520 --> 00:01:09,940
然而我的并没有

19
00:01:09,940 --> 00:01:11,800
不过这个东西其实只是一个触摸感应

20
00:01:11,800 --> 00:01:15,080
所以我就使用我的圆珠笔的末端

21
00:01:15,080 --> 00:01:16,940
我觉得用起来应该是完全没问题的

22
00:01:16,990 --> 00:01:20,260
插入卡带并且打开电源

23
00:01:20,260 --> 00:01:22,780
就能看到这个有趣的欢迎动画了

24
00:01:22,780 --> 00:01:24,340
尽管看起来并不震撼

25
00:01:24,340 --> 00:01:25,560
但是注意到底部

26
00:01:25,560 --> 00:01:27,720
这是1983年开发的

27
00:01:27,720 --> 00:01:30,300
这在当年还是相当酷的

28
00:01:30,310 --> 00:01:33,200
Commodore 64在那时刚刚诞生不久

29
00:01:33,200 --> 00:01:38,280
那些挖掘出C64图形潜力的软件都还没出现呢

30
00:01:38,800 --> 00:01:41,140
接着你会发现它开始绘制一个场景

31
00:01:41,420 --> 00:01:45,360
有趣的是在这里他们用到了他们自己的绘图函数

32
00:01:45,369 --> 00:01:48,469
根据一些简单的坐标来慢慢绘制这个图像

33
00:01:49,420 --> 00:01:52,200
尽管相比近些年的C64 Demo

34
00:01:52,200 --> 00:01:55,240
这显然不是最快的填充算法

35
00:01:55,360 --> 00:01:59,560
但是我仍然觉得应该放开一点标准 毕竟这是1983年

36
00:02:06,160 --> 00:02:09,680
按下绘图板上的任意一个按键就会打开主菜单

37
00:02:10,460 --> 00:02:13,280
使用这个绘图板就有点使用鼠标的感觉

38
00:02:13,280 --> 00:02:15,200
需要指出的是

39
00:02:15,200 --> 00:02:19,680
当年唯一的面向消费者的 使用鼠标作为指向设备的电脑

40
00:02:19,680 --> 00:02:23,280
只有售价接近与一辆汽车的Apple Lisa

41
00:02:24,940 --> 00:02:28,100
稍微随便画一点东西

42
00:02:28,100 --> 00:02:29,320
有趣的一点

43
00:02:29,330 --> 00:02:31,190
这里有一个叫做Oops的按键

44
00:02:31,190 --> 00:02:35,140
这可能是我见过的最早的Undo按钮的例子

45
00:02:35,140 --> 00:02:36,820
再来试一遍

46
00:02:47,140 --> 00:02:50,160
好了我现在创作了一些抽象艺术杰作

47
00:02:50,160 --> 00:02:52,100
来试试能不能填上一点颜色

48
00:02:52,370 --> 00:02:54,010
比如这里选择蓝色

49
00:02:57,480 --> 00:02:59,480
然后填在这里

50
00:03:02,760 --> 00:03:05,420
然后再试试黄色

51
00:03:06,380 --> 00:03:07,880
需要说明的是

52
00:03:07,880 --> 00:03:10,370
他使用的是Commodore的多色模式

53
00:03:10,370 --> 00:03:12,120
我在之前讲过

54
00:03:12,120 --> 00:03:16,120
在每个8x8的颜色单元内 最多可以使用4种颜色

55
00:03:16,480 --> 00:03:18,400
只要你不在临近的地方填充太多颜色

56
00:03:18,620 --> 00:03:20,300
就可以避免冲突

57
00:03:21,500 --> 00:03:25,180
另外一点事，上面是16种颜色

58
00:03:25,380 --> 00:03:31,300
下面则是通过交替的像素来实现的伪色 （up注：这种技术叫做dithering）

59
00:03:31,680 --> 00:03:35,300
我的视频捕捉设备好像遇到了一些干扰问题 不要在意啦

60
00:03:36,200 --> 00:03:39,440
无论如何 我可以填入一种这样的伪色

61
00:03:39,440 --> 00:03:41,240
于是看起来就更加有质感

62
00:03:42,160 --> 00:03:43,840
好了我的艺术创作就先到这里

63
00:03:43,850 --> 00:03:46,190
现在回去 点击 存储

64
00:03:46,190 --> 00:03:48,790
看看我能不能在软盘里找到一些示例文件展示一下

65
00:03:48,800 --> 00:03:52,500
于是我现在放进了软盘 里面有11张照片

66
00:03:52,730 --> 00:03:55,410
可惜我并不清楚这些图片是哪里来的

67
00:03:55,700 --> 00:03:59,600
无论如何 点击这个GET 然后把指针移向INVASION

68
00:03:59,810 --> 00:04:03,030
载入需要大约30秒时间

69
00:04:03,340 --> 00:04:05,280
现在回到主菜单

70
00:04:05,280 --> 00:04:07,760
然后回到绘画界面

71
00:04:07,900 --> 00:04:11,120
虽然我不知道这些小盒子是什么意思

72
00:04:11,120 --> 00:04:13,600
但是确实有许多不错的多色艺术作品

73
00:04:13,730 --> 00:04:17,710
使用放大工具 可以仔细看看这些部分

74
00:04:17,850 --> 00:04:21,650
这就是这些像素艺术作品 如何一个一个像素画出来的

75
00:04:21,720 --> 00:04:23,880
确实要对这些艺术家表示一下赞叹

76
00:04:23,880 --> 00:04:26,080
能够创造出这样的作品

77
00:04:27,520 --> 00:04:31,810
那么自然 我就对这东西是怎么工作的很感兴趣了

78
00:04:32,060 --> 00:04:38,240
我有一种预感 就是它使用了和C64 paddle（一种摇杆） 一样的引脚

79
00:04:38,480 --> 00:04:45,120
C64的每个摇杆接口上都有两个 pot（电位器）输入 一共4个

80
00:04:45,520 --> 00:04:48,740
最初的用途是为了搭配这种的paddle使用的

81
00:04:49,000 --> 00:04:51,020
于是我打算做一些小小的实验

82
00:04:51,030 --> 00:04:52,470
把paddle插上电脑

83
00:04:52,600 --> 00:04:59,240
如果想要读取第一个摇杆的输入寄存器 只要使用peak指令读取内存地址54298就可以了

84
00:04:59,540 --> 00:05:03,240
然而为了方便一点我准备写一个简单的BASIC程序

85
00:05:03,240 --> 00:05:05,860
同时显示摇杆口1上两个电位器的数据

86
00:05:12,640 --> 00:05:17,700
加入goto指令这样就会一直不断的输出

87
00:05:18,300 --> 00:05:22,220
可以看见数据有一点漂移 但是大致上还是比较稳定的

88
00:05:22,580 --> 00:05:26,400
而当我旋转paddle的时候可以明显看见数字的变化

89
00:05:26,940 --> 00:05:30,680
现在插入Koala pad 继续运行同样的程序

90
00:05:31,060 --> 00:05:36,320
很明显Koala pad也是和paddle一样通过电位器输入 来传输信号的

91
00:05:37,780 --> 00:05:42,400
一个寄存器保存横向位置 另外一个保存纵向位置

92
00:05:43,180 --> 00:05:48,300
另外关于POT输入有趣的一点是 如果你看C64的主板

93
00:05:48,300 --> 00:05:52,160
你会发现读取摇杆输入的是6526 CIA芯片

94
00:05:52,160 --> 00:05:58,120
这个芯片同样也负责键盘和大部分用户端口 磁盘驱动器等的输入输出

95
00:05:58,380 --> 00:06:01,700
然而电位器输入却是由6581 SID芯片负责的

96
00:06:01,780 --> 00:06:08,800
就是那个赋予C64独特音效的音源芯片 （毕竟电位器输入属于模拟信号 和音频放一起不难理解）

97
00:06:10,800 --> 00:06:14,680
接下来嘛 就要来拆一拆这个东西了

98
00:06:15,960 --> 00:06:19,340
看来这个保修贴纸下还有一些螺丝

99
00:06:19,349 --> 00:06:21,329
看来我只能破坏保修了

100
00:06:22,139 --> 00:06:26,479
把上面板取下来 接着是两个按键

101
00:06:26,900 --> 00:06:28,460
接着就能拆下这个板子了

102
00:06:28,620 --> 00:06:30,020
看起来相当简单

103
00:06:30,300 --> 00:06:32,180
里面还有块电路板

104
00:06:32,780 --> 00:06:36,160
然而讲道理我完全不清楚这些集成电路是做什么用的

105
00:06:37,400 --> 00:06:39,860
用于按钮的微动开关

106
00:06:40,060 --> 00:06:41,720
这里有一个日期码

107
00:06:41,720 --> 00:06:45,500
这个是在1984年2月制造的

108
00:06:46,420 --> 00:06:49,780
另外Koala pad同样可以作为GeOS的指向设备使用

109
00:06:50,040 --> 00:06:54,660
GeOS是1986年出现的用于C64的图形操作系统

110
00:06:54,749 --> 00:06:56,889
也就是KoalaPad出现大约三年后

111
00:06:57,080 --> 00:07:01,760
另外也有很多第三方的软件可以支持配合KoalaPad使用

112
00:07:02,060 --> 00:07:03,920
这个确实是计算机历史很有趣的一部分

113
00:07:03,920 --> 00:07:09,580
因为很多早期的游戏就是利用这类设备进行图形设计的

114
00:07:09,860 --> 00:07:12,000
我喜欢这个板子带来的创新

115
00:07:12,000 --> 00:07:13,760
不单单是绘图板本身

116
00:07:13,760 --> 00:07:14,800
包括它的这个软件

117
00:07:14,800 --> 00:07:24,600
这个1983年的软件包含了指向设备驱动的操作这种概念

118
00:07:24,600 --> 00:07:28,460
而许多电脑在许多年后才出现了这种设计

119
00:07:28,880 --> 00:07:32,680
我还收集了这个时间段其它一些有趣的外设

120
00:07:32,680 --> 00:07:36,020
我会在将来的视频里为大家展示

121
00:07:36,030 --> 00:07:38,110
感谢大家的观看

122
00:07:39,000 --> 00:07:41,000
翻译：ZephRay 欢迎投币、订阅 喜欢请到Patreon支持原作者